{"version":3,"sources":["create-cn-test.ts"],"names":[],"mappings":"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","file":"create-cn-test.js","sourcesContent":["import { createCn } from './create-cn';\n\ntest('should create function', () => {\n    const cn = createCn('block');\n\n    expect(typeof cn).toBe('function');\n});\n\ntest('created function should return block name', () => {\n    const cn = createCn('block');\n\n    expect(cn()).toBe('block');\n});\n\ntest('should add className from props of parent object', () => {\n    const pseudoComponent = {\n        props: { className: 'external' },\n        cn: createCn('block')\n    };\n\n    expect(pseudoComponent.cn()).toBe('block external');\n});\n\ntest('should not fail if props getter doesn\\'t has className props', () => {\n    const pseudoComponent = {\n        props: {},\n        cn: createCn('block')\n    };\n\n    expect(pseudoComponent.cn()).toBe('block');\n});\n\ntest('should add themed className when \"theme\" prop is present', () => {\n    const pseudoComponent = {\n        props: {\n            className: 'external',\n            theme: 'white'\n        },\n        cn: createCn('block')\n    };\n\n    expect(pseudoComponent.cn()).toBe('block external block_theme_white');\n});\n\ntest('should add className if it was passed as a string', () => {\n    const cn = createCn('block', 'external');\n\n    expect(cn()).toBe('block external');\n});\n\ntest('should add theme if it was passed as a string', () => {\n    const cn = createCn('block', undefined, 'white');\n\n    expect(cn()).toBe('block block_theme_white');\n});\n\ntest('should add theme and external className if it was passed as a string', () => {\n    const cn = createCn('block', 'external', 'white');\n\n    expect(cn()).toBe('block external block_theme_white');\n});\n\ntest('should add element to block name', () => {\n    const cn = createCn('block');\n\n    expect(cn('element')).toBe('block__element');\n});\n\ntest('should not add external className to element className', () => {\n    const cn = createCn('block', 'external');\n\n    expect(cn('element')).toBe('block__element');\n});\n\ntest('should not add external className to element className when created in component context', () => {\n    const pseudoComponent = {\n        props: { className: 'external' },\n        cn: createCn('block')\n    };\n\n    expect(pseudoComponent.cn('element')).toBe('block__element');\n});\n\ntest('should add boolean modifiers to block className', () => {\n    const cn = createCn('block');\n\n    expect(cn({ mod1: true, mod2: false })).toBe('block block_mod1');\n});\n\ntest('should add string modifier to block className', () => {\n    const cn = createCn('block');\n\n    expect(cn({ mod1: 'value' })).toBe('block block_mod1_value');\n});\n\ntest('should add modifier to element className', () => {\n    const cn = createCn('block');\n\n    const className = cn('element', { mod1: true, mod2: false, mod3: 'value', mod4: 4 });\n    expect(className).toBe('block__element block__element_mod1 block__element_mod3_value block__element_mod4_4');\n});\n"]}