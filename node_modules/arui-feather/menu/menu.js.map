{"version":3,"sources":["menu/menu.tsx"],"names":[],"mappings":"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","file":"menu.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint jsx-a11y/no-static-element-interactions: 0 */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport IconCheck from '../icon/ui/tick';\nimport MenuItem, { MenuItemProps } from '../menu-item/menu-item';\n\nimport { isNodeOutsideElement } from '../lib/window';\nimport keyboardCode from '../lib/keyboard-code';\nimport performance from '../performance';\n\nexport type MenuHighlightedItemShapeType = {\n\n    /**\n     * Уникальный идентификатор\n     */\n    ref?: number | string;\n\n    /**\n     * Элемент списка типа ContentItem\n     */\n    item?: any;\n}\n\n// TODO: тут надо переделать типы, и сделать условными сейчас не очевидно\nexport type MenuContentType = {\n\n    /**\n     * Тип элемента\n     */\n    type?: 'item' | 'group';\n\n    /**\n     * Ключ для перечисления\n     */\n    key?: React.Key;\n\n    /**\n     * Название группы\n     */\n    title?: string;\n\n    /**\n     * Только для type='item', свойство для компонента [MenuItem](#!/MenuItem)\n     */\n    value?: string | number;\n\n    /**\n     * Содержание элемента\n     */\n    content?: React.ReactNode | any[];\n\n    /**\n     * Только для type='item': свойства для компонента [MenuItem](#!/MenuItem)\n     */\n    props?: MenuItemProps;\n};\n\nexport type MenuProps = {\n\n    /**\n     * Тип расположения меню: 'horizontal'\n     */\n    view?: string;\n\n    /**\n     * Размещение заголовка групп: обычное или в одну строку с первым элементом группы\n     */\n    groupView?: 'default' | 'line';\n\n    /**\n     * Тип списка вариантов меню\n     */\n    mode?: 'basic' | 'check' | 'radio' | 'radio-check';\n\n    /**\n     * Управление возможностью изменения значения\n     */\n    disabled?: boolean;\n\n    /**\n     * Управление состоянием фокуса элемента\n     */\n    focused?: boolean;\n\n    /**\n     * Управление автоматическим фокусом на первом элементе при вызове публичного метода focus\n     */\n    autoFocusFirstItem?: boolean;\n\n    /**\n     * Элемент меню, на котором стоит выделение\n     */\n    highlightedItem?: MenuHighlightedItemShapeType;\n\n    /**\n     * Список объектов ContentItem\n     */\n    content?: MenuContentType[];\n\n    /**\n     * Список значений выбранных элементов\n     */\n    checkedItems?: ReadonlyArray<string | number>;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Объект со стилями\n     */\n    style?: React.CSSProperties;\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Обработчик клика по варианту меню\n     */\n    onItemClick?: (item?: any, event?: React.ChangeEvent<any>) => void;\n\n    /**\n     * Обработчик выбора варианта меню\n     */\n    onItemCheck?: (checkedItems?: any[], event?: React.ChangeEvent<any>) => void;\n\n    /**\n     * Обработчик события наведения курсора на меню\n     */\n    onMouseEnter?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события снятия курсора с меню\n     */\n    onMouseLeave?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте\n     */\n    onKeyDown?: (event?: React.KeyboardEvent<any>, item?) => void;\n\n    /**\n     * Обработчик события отжатия на клавишу клавиатуры в момент, когда фокус находится на компоненте\n     */\n    onKeyUp?: (event?: React.KeyboardEvent<any>) => void;\n\n    /**\n     * Обработчик фокуса\n     */\n    onFocus?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик снятия фокуса\n     */\n    onBlur?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик события выделения элемента меню, принимает на вход переменную типа HighlightedItem\n     */\n    onHighlightItem?: (highlightedItem?: any) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n};\n\n/**\n * Компонент меню.\n */\n@performance(true)\nexport class Menu extends React.Component<MenuProps> {\n    protected cn = createCn('menu');\n\n    static defaultProps: Partial<MenuProps> = {\n        size: 'm',\n        mode: 'basic',\n        groupView: 'default',\n        autoFocusFirstItem: false,\n    };\n\n    state = {\n        highlightedItem: null,\n        checkedItems: [],\n        hovered: false,\n    };\n\n    // TODO [issues/1018] переписать тесты нужно, что бы private был\n    root;\n\n    private menuItemList = [];\n\n    private blurTimeoutId = null;\n\n    componentDidMount() {\n        if (!!this.props.content && this.props.content.length > 0\n            && (!this.props.checkedItems || this.props.checkedItems.length === 0)\n            && this.props.mode === 'radio') {\n            const firstItem = this.getFirstItem(this.props.content);\n\n            this.changeCheckedItems([firstItem.value], null);\n        }\n    }\n\n    // eslint-disable-next-line camelcase\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.mode !== 'check' && this.state.checkedItems[0]\n            && nextProps.checkedItems[0] !== this.state.checkedItems[0]) {\n            let highlightedItem;\n\n            this.menuItemList.forEach((item, index, menuItemList) => {\n                if (item.ref === nextProps.checkedItems[0]) {\n                    highlightedItem = menuItemList[index].instance;\n                }\n            });\n\n            if (this.props.onHighlightItem) {\n                this.props.onHighlightItem(highlightedItem);\n            }\n        }\n    }\n\n    // eslint-disable-next-line camelcase\n    UNSAFE_componentWillUpdate() {\n        this.menuItemList = [];\n    }\n\n    componentWillUnmount() {\n        if (this.blurTimeoutId) {\n            clearTimeout(this.blurTimeoutId);\n            this.blurTimeoutId = null;\n        }\n    }\n\n    render() {\n        /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n        return (\n            <div\n                ref={ (root) => {\n                    this.root = root;\n                } }\n                style={ this.props.style }\n                className={ this.cn({\n                    size: this.props.size,\n                    view: this.props.view,\n                    'group-view': this.props.groupView,\n                    hovered: this.state.hovered,\n                    disabled: this.props.disabled,\n                    mode: this.props.mode,\n                }) }\n                id={ this.props.id }\n                tabIndex={ 0 }\n                onMouseEnter={ this.handleMouseEnter }\n                onMouseLeave={ this.handleMouseLeave }\n                onKeyDown={ this.handleKeyDown }\n                onKeyUp={ this.handleKeyUp }\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                { !!this.props.content && this.renderMenuItemList(this.props.content) }\n            </div>\n        );\n        /* eslint-enable jsx-a11y/no-noninteractive-tabindex */\n    }\n\n    renderMenuItemList(content) {\n        const result = [];\n        let groupKey = 0;\n\n        content.forEach((item) => {\n            if (item.type === 'group') {\n                result.push(\n                    <div\n                        className={ this.cn('group') }\n                        key={ `group_${groupKey}` }\n                    >\n                        { !!item.title\n                            && (\n                                <div className={ this.cn('group-title') }>\n                                    { item.title }\n                                </div>\n                            ) }\n                        { this.renderMenuItemList(item.content) }\n                    </div>,\n                );\n                groupKey += 1;\n            } else {\n                result.push(this.renderMenuItem(item));\n            }\n        });\n\n        return result;\n    }\n\n    renderMenuItem(item) {\n        const itemProps = item.props || {};\n        const isItemChecked = this.getIndexInCheckedItemsList(item.value) !== -1;\n        const isItemDisabled = this.props.disabled || itemProps.disabled;\n        const clickHandler = this.props.mode === 'basic' ? itemProps.onClick : (event) => this.handleMenuItemClick(item, event);\n        const menuItem: { item; ref; instance? } = {\n            item,\n            ref: item.value,\n        };\n        const menuItemProps = {\n            ...itemProps,\n            disabled: isItemDisabled,\n            value: item.value,\n            size: this.props.size || itemProps.size,\n            onClick: isItemDisabled ? undefined : clickHandler,\n        };\n        const highlightedItem = this.props.highlightedItem === undefined\n            ? this.state.highlightedItem\n            : this.props.highlightedItem;\n        let iconSize;\n\n        switch (this.props.size) {\n        case 's': case 'm': iconSize = 's'; break;\n        case 'l': case 'xl': iconSize = 'm'; break;\n        }\n\n        this.menuItemList.push(menuItem);\n\n        return (\n            <MenuItem\n                { ...menuItemProps }\n                ref={ (instance) => {\n                    menuItem.instance = instance;\n                } }\n                key={ item.key || item.value }\n                checked={ isItemChecked }\n                type={ this.props.mode === 'basic' ? itemProps.type : 'block' }\n                onMouseEnter={ () => this.handleMenuItemMouseEnter(menuItem) }\n                onMouseLeave={ this.handleMenuItemMouseLeave }\n                hovered={ highlightedItem && highlightedItem.ref === menuItem.ref }\n            >\n                {\n                    this.props.mode === 'check' && isItemChecked\n                    && (\n                        <IconCheck\n                            size={ iconSize }\n                        />\n                    )\n                }\n                { item.content }\n            </MenuItem>\n        );\n    }\n\n    private handleMenuItemClick = (item, event) => {\n        this.setNewCheckedItems(item, event);\n\n        if (this.props.onItemClick) {\n            this.props.onItemClick(item, event);\n        }\n    };\n\n    private handleMouseEnter = (event) => {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    };\n\n    private handleMouseLeave = (event) => {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    };\n\n    private handleKeyUp = (event) => {\n        if (this.props.onKeyUp) {\n            this.props.onKeyUp(event);\n        }\n    };\n\n    private handleKeyDown = (event) => {\n        let highlightedItem = null;\n        let highlightedMenuItem = null;\n        const menuIteListLength = this.menuItemList.length;\n\n        switch (event.which) {\n        case keyboardCode.DOWN_ARROW: {\n            event.preventDefault();\n\n            if (this.state.highlightedItem) {\n                this.menuItemList.forEach((item, index, menuItemList) => {\n                    if (item.ref === this.state.highlightedItem.ref) {\n                        if (index + 1 === menuIteListLength) {\n                            [highlightedItem] = menuItemList;\n                        } else {\n                            highlightedItem = menuItemList[index + 1];\n                        }\n                    }\n                });\n            } else {\n                [highlightedItem] = this.menuItemList;\n            }\n\n            this.setState({\n                highlightedItem,\n            });\n\n            if (this.props.onHighlightItem) {\n                this.props.onHighlightItem(highlightedItem);\n            }\n\n            break;\n        }\n        case keyboardCode.UP_ARROW: {\n            event.preventDefault();\n\n            if (this.state.highlightedItem) {\n                this.menuItemList.forEach((item, index, menuItemList) => {\n                    if (item.ref === this.state.highlightedItem.ref) {\n                        if (index - 1 < 0) {\n                            highlightedItem = menuItemList[menuIteListLength - 1];\n                        } else {\n                            highlightedItem = menuItemList[index - 1];\n                        }\n                    }\n                });\n            } else {\n                highlightedItem = this.menuItemList[menuIteListLength - 1];\n            }\n\n            this.setState({\n                highlightedItem,\n            });\n\n            if (this.props.onHighlightItem) {\n                this.props.onHighlightItem(highlightedItem);\n            }\n\n            break;\n        }\n        case keyboardCode.ENTER:\n        case keyboardCode.SPACE: {\n            event.preventDefault();\n\n            highlightedItem = this.props.highlightedItem === undefined\n                ? this.state.highlightedItem\n                : this.props.highlightedItem;\n\n            if (highlightedItem) {\n                this.setNewCheckedItems(highlightedItem.item, event);\n            }\n\n            break;\n        }\n        }\n\n        if (highlightedItem) {\n            highlightedMenuItem = highlightedItem.instance;\n        }\n\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event, highlightedMenuItem);\n        }\n    };\n\n    private handleFocus = (event) => {\n        if (this.blurTimeoutId) {\n            clearTimeout(this.blurTimeoutId);\n            this.blurTimeoutId = null;\n        }\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    };\n\n    private handleBlur = (event) => {\n        event.persist();\n        if (this.blurTimeoutId) {\n            clearTimeout(this.blurTimeoutId);\n        }\n\n        this.blurTimeoutId = setTimeout(() => {\n            if (isNodeOutsideElement(document.activeElement, this.root) && this.props.onBlur) {\n                this.props.onBlur(event);\n            }\n            this.blurTimeoutId = null;\n        }, 0);\n    };\n\n    private handleMenuItemMouseEnter(menuItem) {\n        this.setState({\n            highlightedItem: menuItem,\n        });\n\n        if (this.props.onHighlightItem) {\n            this.props.onHighlightItem(menuItem);\n        }\n    }\n\n    private handleMenuItemMouseLeave = () => {\n        this.setState({\n            highlightedItem: null,\n        });\n\n        if (this.props.onHighlightItem) {\n            this.props.onHighlightItem(null);\n        }\n    };\n\n    /**\n     * Возвращает корневой `HTMLElement` компонента.\n     */\n    public getNode() {\n        return this.root;\n    }\n\n    /**\n     * Устанавливает фокус на меню.\n     */\n    public focus() {\n        this.root.focus();\n\n        if (this.props.autoFocusFirstItem) {\n            const highlightedItem = this.menuItemList[0];\n\n            this.setState({\n                highlightedItem,\n            });\n\n            if (this.props.onHighlightItem) {\n                this.props.onHighlightItem(highlightedItem);\n            }\n        }\n    }\n\n    /**\n     * Убирает фокус с меню.\n     */\n    // eslint-disable-next-line class-methods-use-this\n    public blur() {\n        if (document.activeElement) {\n            (document.activeElement as HTMLElement).blur();\n        }\n    }\n\n    private setNewCheckedItems(item, event) {\n        const { value } = item;\n        let checkedItems = this.props.checkedItems === undefined\n            ? Array.from(this.state.checkedItems)\n            : Array.from(this.props.checkedItems);\n        const indexInCheckedItemsList = this.getIndexInCheckedItemsList(value);\n\n        switch (this.props.mode) {\n        case 'check':\n            if (indexInCheckedItemsList === -1) {\n                checkedItems.push(value);\n            } else {\n                checkedItems.splice(indexInCheckedItemsList, 1);\n            }\n            break;\n        case 'radio':\n            if (indexInCheckedItemsList === -1) {\n                checkedItems = [value];\n            }\n            break;\n        case 'radio-check':\n            if (indexInCheckedItemsList === -1) {\n                checkedItems = [value];\n            } else {\n                checkedItems = [];\n            }\n            break;\n        default:\n            break;\n        }\n\n        this.changeCheckedItems(checkedItems, event);\n        this.focus();\n    }\n\n    /**\n     * Изменяет выбранные значения.\n     *\n     * @param checkedItems Список выбранных значений\n     * @param event\n     */\n    private changeCheckedItems(checkedItems: Array<string | number>, event: React.ChangeEvent) {\n        this.setState({\n            checkedItems,\n        });\n\n        if (this.props.onItemCheck) {\n            this.props.onItemCheck(checkedItems, event);\n        }\n    }\n\n    private getIndexInCheckedItemsList = (value) => {\n        const checkedItems = this.props.checkedItems ? this.props.checkedItems : this.state.checkedItems;\n\n        return checkedItems.indexOf(value);\n    };\n\n    private getFirstItem(content) {\n        const firstItem = content[0];\n\n        return firstItem.type === 'group' ? this.getFirstItem(firstItem.content) : firstItem;\n    }\n}\n\nexport default withTheme<MenuProps, Menu>(Menu);\n"]}