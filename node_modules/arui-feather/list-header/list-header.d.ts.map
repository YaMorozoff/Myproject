{"version":3,"sources":["list-header/list-header.tsx"],"names":[],"mappings":"AAIA,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,oBAAY,eAAe,GAAG;IAE1B;;OAEG;IACH,KAAK,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;IAExB;;OAEG;IACH,WAAW,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;IAE9B;;OAEG;IACH,KAAK,CAAC,EAAE,eAAe,GAAG,eAAe,CAAC;IAE1C;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,EAAE,CAAC,EAAE,MAAM,CAAC;IAEZ;;OAEG;IACH,IAAI,CAAC,EAAE,aAAa,GAAG,QAAQ,CAAC;IAEhC;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;CAE3B,CAAC;AAEF;;GAEG;AACH,qBAAa,UAAW,SAAQ,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC;IAChE,SAAS,CAAC,EAAE;;;;;;iBAA2B;IAEvC,MAAM;CAiBT;;AAED,wBAAkE","file":"list-header.d.ts","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nexport type ListHeaderProps = {\n\n    /**\n     * Заголовок\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Комментарий\n     */\n    description?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Вид компонента\n     */\n    view?: 'transparent' | 'filled';\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n};\n\n/**\n * Компонент для разделения списка по датам или смысловым группам.\n */\nexport class ListHeader extends React.PureComponent<ListHeaderProps> {\n    protected cn = createCn('list-header');\n\n    render() {\n        return (\n            <div\n                className={ this.cn({ filled: this.props.view === 'filled' }) }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                <span className={ this.cn('title') }>{ this.props.title }</span>\n                { this.props.description && (\n                    <span className={ this.cn('description') }>\n                        ,\n                        { ' ' }\n                        { this.props.description }\n                    </span>\n                ) }\n            </div>\n        );\n    }\n}\n\nexport default withTheme<ListHeaderProps, ListHeader>(ListHeader);\n"]}