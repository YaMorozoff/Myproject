{"version":3,"sources":["form/form.tsx"],"names":[],"mappings":"AAIA,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,oBAAY,SAAS,GAAG;IAEpB;;OAEG;IACH,OAAO,CAAC,EAAE,mCAAmC,GAAG,qBAAqB,GAAG,YAAY,CAAC;IAErF;;OAEG;IACH,MAAM,CAAC,EAAE,MAAM,CAAC;IAEhB;;OAEG;IACH,MAAM,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC;IAExB;;OAEG;IACH,IAAI,CAAC,EAAE,MAAM,GAAG,QAAQ,CAAC;IAEzB;;OAEG;IACH,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;IAE9B;;OAEG;IACH,MAAM,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;IAEzB;;OAEG;IACH,UAAU,CAAC,EAAE,OAAO,CAAC;IAErB;;OAEG;IACH,YAAY,CAAC,EAAE,OAAO,CAAC;IAEvB;;OAEG;IACH,QAAQ,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;IAE3B;;OAEG;IACH,KAAK,CAAC,EAAE,eAAe,GAAG,eAAe,CAAC;IAE1C;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,EAAE,CAAC,EAAE,MAAM,CAAC;IAEZ;;OAEG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd;;OAEG;IACH,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IAElD;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;CAE3B,CAAC;AAEF;;GAEG;AACH,qBAAa,IAAK,SAAQ,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC;IACpD,SAAS,CAAC,EAAE;;;;;;iBAAoB;IAEhC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,CAOrC;IAEF,MAAM;IA8BN,OAAO,CAAC,YAAY,CAMnB;CACJ;;AAED,wBAAgD","file":"form.d.ts","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nexport type FormProps = {\n\n    /**\n     * Способ кодирования данных формы при их отправке\n     */\n    enctype?: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain';\n\n    /**\n     * Адрес отправки данных на сервер\n     */\n    action?: string;\n\n    /**\n     * Метод запроса\n     */\n    method?: 'post' | 'get';\n\n    /**\n     * Тип формы\n     */\n    view?: 'line' | 'normal';\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Футер для формы\n     */\n    footer?: React.ReactNode;\n\n    /**\n     * Управление встроенным в браузер механизмом валидации формы\n     */\n    noValidate?: boolean;\n\n    /**\n     * Управление автозаполнением формы\n     */\n    autocomplete?: boolean;\n\n    /**\n     * Дочерние элементы формы\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Имя компонента в DOM\n     */\n    name?: string;\n\n    /**\n     * Обработчик отправки формы\n     */\n    onSubmit?: (event?: React.FormEvent<any>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n};\n\n/**\n * Компонент формы.\n */\nexport class Form extends React.PureComponent<FormProps> {\n    protected cn = createCn('form');\n\n    static defaultProps: Partial<FormProps> = {\n        action: '/',\n        enctype: 'application/x-www-form-urlencoded',\n        method: 'post',\n        size: 'm',\n        noValidate: false,\n        autocomplete: true,\n    };\n\n    render() {\n        return (\n            <form\n                action={ this.props.action }\n                encType={ this.props.enctype }\n                method={ this.props.method }\n                noValidate={ this.props.noValidate }\n                autoComplete={ this.props.autocomplete === false ? 'off' : 'on' }\n                className={ this.cn({\n                    size: this.props.size,\n                    view: this.props.view,\n                }) }\n                id={ this.props.id }\n                name={ this.props.name }\n                onSubmit={ this.handleSubmit }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                { this.props.children }\n                {\n                    this.props.footer\n                        && (\n                            <div className={ this.cn('footer') }>\n                                { this.props.footer }\n                            </div>\n                        )\n                }\n            </form>\n        );\n    }\n\n    private handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (this.props.onSubmit) {\n            this.props.onSubmit(event);\n        }\n    }\n}\n\nexport default withTheme<FormProps, Form>(Form);\n"]}