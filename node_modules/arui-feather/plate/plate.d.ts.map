{"version":3,"sources":["plate/plate.tsx"],"names":[],"mappings":"AAMA,OAAO,KAAK,MAAM,OAAO,CAAC;AAS1B,oBAAY,UAAU,GAAG;IAErB;;OAEG;IACH,SAAS,CAAC,EAAE,OAAO,CAAC;IAEpB;;OAEG;IACH,QAAQ,CAAC,EAAE,OAAO,CAAC;IAEnB;;OAEG;IACH,MAAM,CAAC,EAAE,OAAO,CAAC;IAEjB;;OAEG;IACH,IAAI,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;IAEvB;;OAEG;IACH,QAAQ,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;IAE3B;;OAEG;IACH,KAAK,CAAC,EAAE,eAAe,GAAG,eAAe,CAAC;IAE1C;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;IAEf;;OAEG;IACH,IAAI,CAAC,EAAE,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,SAAS,GAAG,SAAS,CAAC;IAE9D;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,EAAE,CAAC,EAAE,MAAM,CAAC;IAEZ;;OAEG;IACH,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IAExD;;OAEG;IACH,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IAEvD;;OAEG;IACH,cAAc,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IAE5D;;OAEG;IACH,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IAElD;;OAEG;IACH,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IAExD;;OAEG;IACH,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IAEvD;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;CAE3B,CAAC;AAEF;;GAEG;AACH,qBAAa,KAAM,SAAQ,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC;IACtD,SAAS,CAAC,EAAE;;;;;;iBAAqB;IAEjC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,CAKtC;IAEF,KAAK;;;MAGH;IAGF,IAAI,EAAE,WAAW,CAAC;IAElB,MAAM;IA+EN,OAAO,CAAC,WAAW,CAIjB;IAEF,OAAO,CAAC,gBAAgB,CAWvB;IAED,OAAO,CAAC,kBAAkB,CAIzB;IAED,OAAO,CAAC,iBAAiB,CASxB;IAED,OAAO,CAAC,iBAAiB,CAQvB;IAEF,OAAO,CAAC,aAAa,CAIpB;CACJ;;AAED,wBAAmD","file":"plate.d.ts","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint jsx-a11y/no-static-element-interactions: 0 */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport IconClose from '../icon/ui/close';\nimport IconArrowUp from '../icon/ui/arrow-up';\nimport IconArrowDown from '../icon/ui/arrow-down';\nimport IconButton from '../icon-button/icon-button';\n\nexport type PlateProps = {\n\n    /**\n     * Управление наличием закрывающего крестика\n     */\n    hasCloser?: boolean;\n\n    /**\n     * Управление наличием стрелки скрытия контента\n     */\n    foldable?: boolean;\n\n    /**\n     * Начальное состояние контента при foldable={ true }\n     */\n    folded?: boolean;\n\n    /**\n     * Иконка компонента\n     */\n    icon?: React.ReactNode;\n\n    /**\n     * Дочерние элементы `Plate`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Заголовок `Plate`\n     */\n    title?: string;\n\n    /**\n     * Тип `Plate`\n     */\n    type?: 'default' | 'common' | 'error' | 'success' | 'warning';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Обработчик клика стрелке сворачивания\\разворачивания плашки\n     */\n    onFolderClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик клика на заголовке\n     */\n    onTitleClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на заголовке компонента\n     */\n    onTitleKeyDown?: (event?: React.KeyboardEvent<any>) => void;\n\n    /**\n     * Обработчик клика по плашке\n     */\n    onClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик клика по крестику\n     */\n    onCloserClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте\n     */\n    onKeyDown?: (event?: React.KeyboardEvent<any>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n};\n\n/**\n * Компонент плашки.\n */\nexport class Plate extends React.PureComponent<PlateProps> {\n    protected cn = createCn('plate');\n\n    static defaultProps: Partial<PlateProps> = {\n        foldable: false,\n        folded: true,\n        type: 'default',\n        title: '',\n    };\n\n    state = {\n        isHidden: false,\n        isFolded: this.props.folded,\n    };\n\n    // TODO [issues/1018] на private ругается\n    root: HTMLElement;\n\n    render() {\n        return (\n            <div\n                className={ this.cn({\n                    'has-closer': this.props.hasCloser,\n                    foldable: this.props.foldable,\n                    'has-icon': !!this.props.icon,\n                    hidden: this.props.hasCloser && this.state.isHidden,\n                    type: this.props.type,\n                }) }\n                id={ this.props.id }\n                onClick={ this.handleClick }\n                onKeyDown={ this.handleKeyDown }\n                ref={ (node) => {\n                    this.root = node;\n                } }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                {\n                    this.props.icon\n                    && (\n                        <span className={ this.cn('icon') }>\n                            { this.props.icon }\n                        </span>\n                    )\n                }\n                {\n                    this.props.title\n                    && (\n                        <div\n                            className={ this.cn('title') }\n                        >\n                            <span\n                                onClick={ this.handleTitleClick }\n                                onKeyUp={ this.handleTitleKeyDown }\n                            >\n                                { this.props.title }\n                            </span>\n                            {\n                                this.props.foldable\n                            && (\n                                <IconButton\n                                    className={ this.cn('folder') }\n                                    onClick={ this.handleFolderClick }\n                                >\n                                    {\n                                        this.state.isFolded\n                                            ? <IconArrowDown />\n                                            : <IconArrowUp />\n                                    }\n                                </IconButton>\n                            )\n                            }\n                        </div>\n                    )\n                }\n                <div\n                    className={ this.cn('content', {\n                        folded: this.props.foldable && this.state.isFolded,\n                    }) }\n                >\n                    { this.props.children }\n                    {\n                        this.props.foldable\n                        || (this.props.hasCloser\n                        && (\n                            <IconButton\n                                className={ this.cn('closer') }\n                                onClick={ this.handleCloserClick }\n                            >\n                                <IconClose />\n                            </IconButton>\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    private handleClick = (event) => {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    };\n\n    private handleTitleClick = (event) => {\n        if (this.props.foldable) {\n            this.setState({\n                // eslint-disable-next-line react/no-access-state-in-setstate\n                isFolded: !this.state.isFolded,\n            });\n        }\n\n        if (this.props.onTitleClick) {\n            this.props.onTitleClick(event);\n        }\n    }\n\n    private handleTitleKeyDown = (event) => {\n        if (this.props.onTitleKeyDown) {\n            this.props.onTitleKeyDown(event);\n        }\n    }\n\n    private handleFolderClick = (event) => {\n        this.setState({\n            // eslint-disable-next-line react/no-access-state-in-setstate\n            isFolded: !this.state.isFolded,\n        });\n\n        if (this.props.onFolderClick) {\n            this.props.onFolderClick(event);\n        }\n    }\n\n    private handleCloserClick = (event) => {\n        this.setState({\n            isHidden: true,\n        });\n\n        if (this.props.onCloserClick) {\n            this.props.onCloserClick(event);\n        }\n    };\n\n    private handleKeyDown = (event) => {\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n}\n\nexport default withTheme<PlateProps, Plate>(Plate);\n"]}