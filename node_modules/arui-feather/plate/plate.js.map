{"version":3,"sources":["plate/plate.tsx"],"names":[],"mappings":"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","file":"plate.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint jsx-a11y/no-static-element-interactions: 0 */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport IconClose from '../icon/ui/close';\nimport IconArrowUp from '../icon/ui/arrow-up';\nimport IconArrowDown from '../icon/ui/arrow-down';\nimport IconButton from '../icon-button/icon-button';\n\nexport type PlateProps = {\n\n    /**\n     * Управление наличием закрывающего крестика\n     */\n    hasCloser?: boolean;\n\n    /**\n     * Управление наличием стрелки скрытия контента\n     */\n    foldable?: boolean;\n\n    /**\n     * Начальное состояние контента при foldable={ true }\n     */\n    folded?: boolean;\n\n    /**\n     * Иконка компонента\n     */\n    icon?: React.ReactNode;\n\n    /**\n     * Дочерние элементы `Plate`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Заголовок `Plate`\n     */\n    title?: string;\n\n    /**\n     * Тип `Plate`\n     */\n    type?: 'default' | 'common' | 'error' | 'success' | 'warning';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Обработчик клика стрелке сворачивания\\разворачивания плашки\n     */\n    onFolderClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик клика на заголовке\n     */\n    onTitleClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на заголовке компонента\n     */\n    onTitleKeyDown?: (event?: React.KeyboardEvent<any>) => void;\n\n    /**\n     * Обработчик клика по плашке\n     */\n    onClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик клика по крестику\n     */\n    onCloserClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте\n     */\n    onKeyDown?: (event?: React.KeyboardEvent<any>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n};\n\n/**\n * Компонент плашки.\n */\nexport class Plate extends React.PureComponent<PlateProps> {\n    protected cn = createCn('plate');\n\n    static defaultProps: Partial<PlateProps> = {\n        foldable: false,\n        folded: true,\n        type: 'default',\n        title: '',\n    };\n\n    state = {\n        isHidden: false,\n        isFolded: this.props.folded,\n    };\n\n    // TODO [issues/1018] на private ругается\n    root: HTMLElement;\n\n    render() {\n        return (\n            <div\n                className={ this.cn({\n                    'has-closer': this.props.hasCloser,\n                    foldable: this.props.foldable,\n                    'has-icon': !!this.props.icon,\n                    hidden: this.props.hasCloser && this.state.isHidden,\n                    type: this.props.type,\n                }) }\n                id={ this.props.id }\n                onClick={ this.handleClick }\n                onKeyDown={ this.handleKeyDown }\n                ref={ (node) => {\n                    this.root = node;\n                } }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                {\n                    this.props.icon\n                    && (\n                        <span className={ this.cn('icon') }>\n                            { this.props.icon }\n                        </span>\n                    )\n                }\n                {\n                    this.props.title\n                    && (\n                        <div\n                            className={ this.cn('title') }\n                        >\n                            <span\n                                onClick={ this.handleTitleClick }\n                                onKeyUp={ this.handleTitleKeyDown }\n                            >\n                                { this.props.title }\n                            </span>\n                            {\n                                this.props.foldable\n                            && (\n                                <IconButton\n                                    className={ this.cn('folder') }\n                                    onClick={ this.handleFolderClick }\n                                >\n                                    {\n                                        this.state.isFolded\n                                            ? <IconArrowDown />\n                                            : <IconArrowUp />\n                                    }\n                                </IconButton>\n                            )\n                            }\n                        </div>\n                    )\n                }\n                <div\n                    className={ this.cn('content', {\n                        folded: this.props.foldable && this.state.isFolded,\n                    }) }\n                >\n                    { this.props.children }\n                    {\n                        this.props.foldable\n                        || (this.props.hasCloser\n                        && (\n                            <IconButton\n                                className={ this.cn('closer') }\n                                onClick={ this.handleCloserClick }\n                            >\n                                <IconClose />\n                            </IconButton>\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    private handleClick = (event) => {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    };\n\n    private handleTitleClick = (event) => {\n        if (this.props.foldable) {\n            this.setState({\n                // eslint-disable-next-line react/no-access-state-in-setstate\n                isFolded: !this.state.isFolded,\n            });\n        }\n\n        if (this.props.onTitleClick) {\n            this.props.onTitleClick(event);\n        }\n    }\n\n    private handleTitleKeyDown = (event) => {\n        if (this.props.onTitleKeyDown) {\n            this.props.onTitleKeyDown(event);\n        }\n    }\n\n    private handleFolderClick = (event) => {\n        this.setState({\n            // eslint-disable-next-line react/no-access-state-in-setstate\n            isFolded: !this.state.isFolded,\n        });\n\n        if (this.props.onFolderClick) {\n            this.props.onFolderClick(event);\n        }\n    }\n\n    private handleCloserClick = (event) => {\n        this.setState({\n            isHidden: true,\n        });\n\n        if (this.props.onCloserClick) {\n            this.props.onCloserClick(event);\n        }\n    };\n\n    private handleKeyDown = (event) => {\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n}\n\nexport default withTheme<PlateProps, Plate>(Plate);\n"]}