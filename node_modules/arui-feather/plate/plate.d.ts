import React from 'react';
export declare type PlateProps = {
    /**
     * Управление наличием закрывающего крестика
     */
    hasCloser?: boolean;
    /**
     * Управление наличием стрелки скрытия контента
     */
    foldable?: boolean;
    /**
     * Начальное состояние контента при foldable={ true }
     */
    folded?: boolean;
    /**
     * Иконка компонента
     */
    icon?: React.ReactNode;
    /**
     * Дочерние элементы `Plate`
     */
    children?: React.ReactNode;
    /**
     * Тема компонента
     */
    theme?: 'alfa-on-color' | 'alfa-on-white';
    /**
     * Заголовок `Plate`
     */
    title?: string;
    /**
     * Тип `Plate`
     */
    type?: 'default' | 'common' | 'error' | 'success' | 'warning';
    /**
     * Дополнительный класс
     */
    className?: string;
    /**
     * Идентификатор компонента в DOM
     */
    id?: string;
    /**
     * Обработчик клика стрелке сворачивания\разворачивания плашки
     */
    onFolderClick?: (event?: React.MouseEvent<any>) => void;
    /**
     * Обработчик клика на заголовке
     */
    onTitleClick?: (event?: React.MouseEvent<any>) => void;
    /**
     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на заголовке компонента
     */
    onTitleKeyDown?: (event?: React.KeyboardEvent<any>) => void;
    /**
     * Обработчик клика по плашке
     */
    onClick?: (event?: React.MouseEvent<any>) => void;
    /**
     * Обработчик клика по крестику
     */
    onCloserClick?: (event?: React.MouseEvent<any>) => void;
    /**
     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте
     */
    onKeyDown?: (event?: React.KeyboardEvent<any>) => void;
    /**
     * Идентификатор для систем автоматизированного тестирования
     */
    'data-test-id'?: string;
};
/**
 * Компонент плашки.
 */
export declare class Plate extends React.PureComponent<PlateProps> {
    protected cn: (this: void | {
        props?: Record<string, unknown>;
    }, elementNameOrMods?: string | {
        [key: string]: string | number | boolean;
    }, mods?: {
        [key: string]: string | number | boolean;
    }) => string;
    static defaultProps: Partial<PlateProps>;
    state: {
        isHidden: boolean;
        isFolded: boolean;
    };
    root: HTMLElement;
    render(): JSX.Element;
    private handleClick;
    private handleTitleClick;
    private handleTitleKeyDown;
    private handleFolderClick;
    private handleCloserClick;
    private handleKeyDown;
}
declare const _default: React.ForwardRefExoticComponent<PlateProps & React.RefAttributes<Plate>> & Plate;
export default _default;
