{"version":3,"sources":["input-group/input-group.tsx"],"names":[],"mappings":";AAAA;;8DAE8D;;;;;;;;;;;;;;;;;;AAE9D,8FAA0D;AAC1D,gDAA0B;AAC1B,2DAA+C;AAC/C,4BAAkC;AAkClC;;GAEG;AACH;IAAgC,8BAAoC;IAApE;QAAA,qEA8CC;QA7Ca,QAAE,GAAG,8BAAQ,CAAC,aAAa,CAAC,CAAC;;IA6C3C,CAAC;IA3CG,2BAAM,GAAN;QAAA,iBA0CC;QAzCG,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAM,eAAe,GAAG,EAAE,CAAC;QAE3B,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACrB,QAAQ,GAAG,CACN,IAAI,CAAC,KAAK,CAAC,QAA8B,CAAC,MAAM;gBAC7C,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;gBACrB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAC9B,CAAC;SACL;QAED,IAAI,QAAQ,EAAE;YACV,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,KAAK;gBAC1C,KAAK,GAAG,eAAK,CAAC,YAAY,CAAC,KAAK,EAAE;oBAC9B,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,KAAK;iBAC1B,CAAC,CAAC;gBAEH,eAAe,CAAC,WAAS,KAAO,CAAC,GAAG,CAChC,wCACI,SAAS,EAAG,KAAI,CAAC,EAAE,CAAC,YAAY,EAAE;wBAC9B,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK;wBAC5B,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ;qBACjC,CAAC,IAEA,KAAK,CACJ,CACV,CAAC;YACN,CAAC,CAAC,CAAC;SACN;QAED,OAAO,CACH,wCACI,SAAS,EAAM,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,mBAAgB,EACnE,EAAE,EAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAClB,IAAI,EAAC,OAAO,EACZ,QAAQ,EAAG,CAAC,CAAC,kBACE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAEvC,sCAAc,CAAC,eAAe,CAAC,CAC9B,CACV,CAAC;IACN,CAAC;IACL,iBAAC;AAAD,CA9CA,AA8CC,CA9C+B,eAAK,CAAC,aAAa,GA8ClD;AA9CY,gCAAU;AAgDvB,kBAAe,cAAS,CAA8B,UAAU,CAAC,CAAC","file":"input-group.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport createFragment from 'react-addons-create-fragment';\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nexport type InputGroupProps = {\n    /**\n     * Управление возможностью компонента занимать всю ширину родителя\n     */\n    width?: 'default' | 'available';\n\n    /**\n     * Дочерние элементы `InputGroup`, как правило, компоненты `Input`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\n/**\n * Компонент группы полей для текстового ввода.\n */\nexport class InputGroup extends React.PureComponent<InputGroupProps> {\n    protected cn = createCn('input-group');\n\n    render() {\n        let children = null;\n        const inputGroupParts = {};\n\n        if (this.props.children) {\n            children = (\n                (this.props.children as React.ReactNode[]).length\n                    ? this.props.children\n                    : [this.props.children]\n            );\n        }\n\n        if (children) {\n            React.Children.forEach(children, (input, index) => {\n                input = React.cloneElement(input, {\n                    width: this.props.width,\n                });\n\n                inputGroupParts[`input-${index}`] = (\n                    <span\n                        className={ this.cn('input-case', {\n                            invalid: !!input.props.error,\n                            disabled: input.props.disabled,\n                        }) }\n                    >\n                        { input }\n                    </span>\n                );\n            });\n        }\n\n        return (\n            <span\n                className={ `${this.cn({ width: this.props.width })} control-group` }\n                id={ this.props.id }\n                role=\"group\"\n                tabIndex={ -1 }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                { createFragment(inputGroupParts) }\n            </span>\n        );\n    }\n}\n\nexport default withTheme<InputGroupProps, InputGroup>(InputGroup);\n"]}