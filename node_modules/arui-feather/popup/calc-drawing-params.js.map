{"version":3,"sources":["popup/calc-drawing-params.ts"],"names":[],"mappings":"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","file":"calc-drawing-params.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// @ts-nocheck\n\nimport { POPUP_MAIN_OFFSET } from '../vars';\n\nconst VIEWPORT_ACCURACY_FACTOR = 0.99;\nconst VIEWPORT_PADDING = 20;\n\nconst DEFAULT_DIRECTIONS = [\n    'bottom-left', 'bottom-center', 'bottom-right',\n    'top-left', 'top-center', 'top-right',\n    'right-top', 'right-center', 'right-bottom',\n    'left-top', 'left-center', 'left-bottom',\n];\n\n/**\n * @typedef {Object} DrawingParams\n * @property {String} direction Направление отрисовки\n * @property {Number} left Положение по горизонтали\n * @property {Number} top Положение по вертикали\n */\n\n/**\n * @typedef {Object} PopupDimension\n * @property {Number} width Ширина попапа\n * @property {Number} height Высота попапа\n * @property {Number} area Площадь попапа\n */\n\n/**\n * @typedef {Object} Rect\n * @property {Number} top\n * @property {Number} left\n * @property {Number} [bottom]\n * @property {Number} [right]\n * @property {Number} [width]\n * @property {Number} [height]\n */\n\n/**\n * @param {String} direction Направление отрисовки\n * @returns {String|Boolean}\n */\nfunction getMainDirection(direction) {\n    const deliveryPosition = direction.indexOf('-');\n\n    return (deliveryPosition !== -1) && direction.substr(0, deliveryPosition);\n}\n\n/**\n * @param {String} direction Направление отрисовки\n * @returns {String|Boolean}\n */\nfunction getSecondaryDirection(direction) {\n    const deliveryPosition = direction.indexOf('-');\n\n    return (deliveryPosition !== -1) && direction.substr(deliveryPosition + 1);\n}\n\n/**\n * Высчитывает координаты блока, который является таргетом поп-апа.\n *\n * @param {PopupHash} popup Набор параметров попапа\n * @returns {Rect}\n */\nexport function calcTargetDimensions(popup) {\n    if (!popup.isTargetAnchor && popup.targetPosition) {\n        return {\n            left: popup.targetPosition.left,\n            top: popup.targetPosition.top,\n            width: 0,\n            height: 0,\n        };\n    }\n\n    const anchor = popup.targetAnchor;\n    const anchorRect = anchor.getBoundingClientRect();\n    const { fitContainer } = popup;\n\n    if (fitContainer) {\n        const fitContainerRect = fitContainer.getBoundingClientRect();\n\n        return {\n            left: (anchorRect.left - fitContainerRect.left) + fitContainer.scrollLeft,\n            top: (anchorRect.top - fitContainerRect.top) + fitContainer.scrollTop,\n            width: anchorRect.width,\n            height: anchorRect.height,\n        };\n    }\n\n    return {\n        left: anchorRect.left + window.pageXOffset,\n        top: anchorRect.top + window.pageYOffset,\n        width: anchorRect.width,\n        height: anchorRect.height,\n    };\n}\n\n/**\n * Рассчитывает размеры и координаты расположения viewport.\n *\n * @returns {Rect}\n */\nfunction calcViewportDimensions() {\n    const winTop = window.pageYOffset;\n    const winLeft = window.pageXOffset;\n    const winWidth = window.innerWidth;\n    const winHeight = window.innerHeight;\n\n    return {\n        top: winTop,\n        left: winLeft,\n        bottom: winTop + winHeight,\n        right: winLeft + winWidth,\n    };\n}\n\n/**\n * Высчитывает размеры и координаты расположения контейнера, в котором рендерится Popup.\n *\n * @param {HTMLElement} container контейнер, в котором будет позиционирован Popup\n * @returns {Rect}\n */\nfunction calcContainerDimensions(container) {\n    const containerTop = container.scrollTop;\n    const containerLeft = container.scrollLeft;\n    const containerHeight = container.offsetHeight;\n    const containerWidth = container.offsetWidth;\n\n    return {\n        top: containerTop,\n        left: containerLeft,\n        bottom: containerTop + containerHeight,\n        right: containerLeft + containerWidth,\n    };\n}\n\n/**\n * Определяет контейнер, в котором рендерится Popup и возвращает его размеры и координаты.\n *\n * @param {PopupHash} popup Набор параметров попапа\n * @returns {Rect}\n */\nexport function calcFitContainerDimensions(popup) {\n    const { fitContainer } = popup;\n\n    return fitContainer\n        ? calcContainerDimensions(fitContainer)\n        : calcViewportDimensions();\n}\n\n/**\n * Рассчитывает пересечения Popup и контейнера, в котором он рендерится.\n *\n * @param {Point} position Позиция\n * @param {Rect} fitContainerDimensions Размеры контейнера, в который будет\n * рендерится Popup\n * @param {PopupDimension} popupDimensions Размеры попапа\n * @param {PopupHash} popupOffsetFitContainer Минимально допустимое смещение в\n * пикселях всплывающего окна от края его контейнера\n * @returns {Number}\n */\nfunction calcFitContainerFactor(\n    position,\n    fitContainerDimensions,\n    popupDimensions,\n    popupOffsetFitContainer,\n) {\n    const intersectionLeft = Math.max(\n        position.left,\n        fitContainerDimensions.left + popupOffsetFitContainer,\n    );\n\n    const intersectionRight = Math.min(\n        position.left + popupDimensions.width,\n        fitContainerDimensions.right - popupOffsetFitContainer,\n    );\n\n    const intersectionTop = Math.max(\n        position.top,\n        fitContainerDimensions.top + popupOffsetFitContainer,\n    );\n\n    const intersectionBottom = Math.min(\n        position.top + popupDimensions.height,\n        fitContainerDimensions.bottom - popupOffsetFitContainer,\n    );\n\n    if ((intersectionLeft < intersectionRight) && (intersectionTop < intersectionBottom)) {\n        return (\n            (intersectionRight - intersectionLeft) * (intersectionBottom - intersectionTop)\n        ) / popupDimensions.area;\n    }\n\n    return 0;\n}\n\n/**\n * Возвращает значения для позиционирования Popup в конкретной позиции.\n *\n * @param {String} direction Направление отрисовки\n * @param {Rect} targetDimensions Область отрисовки якорного элемента\n * @param {PopupDimension} popupDimensions Размеры попапа\n * @param {PopupHash} popup Набор параметров попапа\n * @returns {Point}\n */\nfunction calcPos(direction, targetDimensions, popupDimensions, popup) {\n    const result = {};\n    const mainOffset = popup.offset.main || (popup.isHaveTooltip && POPUP_MAIN_OFFSET) || 0;\n    const secondaryOffset = popup.offset.second;\n\n    const mainDirection = getMainDirection(direction);\n    const secondaryDirection = getSecondaryDirection(direction);\n\n    switch (mainDirection) {\n    case 'bottom':\n        result.top = targetDimensions.top + targetDimensions.height + mainOffset;\n        break;\n    case 'top':\n        result.top = targetDimensions.top - popupDimensions.height - mainOffset;\n        break;\n    case 'left':\n        result.left = targetDimensions.left - popupDimensions.width - mainOffset;\n        break;\n    case 'right':\n        result.left = targetDimensions.left + targetDimensions.width + mainOffset;\n        break;\n    default:\n        break;\n    }\n\n    switch (secondaryDirection) {\n    case 'right':\n        result.left = (targetDimensions.left + targetDimensions.width) - popupDimensions.width - secondaryOffset;\n        break;\n    case 'left':\n        result.left = targetDimensions.left + secondaryOffset;\n        break;\n    case 'bottom':\n        result.top = (targetDimensions.top + targetDimensions.height) - popupDimensions.height - secondaryOffset;\n        break;\n    case 'top':\n        result.top = targetDimensions.top + secondaryOffset;\n        break;\n    case 'center':\n        switch (mainDirection) {\n        case 'top':\n        case 'bottom':\n            result.left = targetDimensions.left + (\n                (targetDimensions.width / 2) - (popupDimensions.width / 2)\n            );\n            break;\n        case 'left':\n        case 'right':\n            result.top = targetDimensions.top + (\n                (targetDimensions.height / 2) - (popupDimensions.height / 2)\n            );\n            break;\n        default:\n            break;\n        }\n        break;\n    default:\n        break;\n    }\n\n    return result;\n}\n\n/**\n * Рассчитывает наилучшие значения для позиционирования Popup.\n *\n * @param {PopupHash} popup Набор параметров попапа\n * @param {Rect} targetDimensions Область отрисовки якорного элемента\n * @param {Rect} fitContainerDimensions Размеры вьюпорта\n * @returns {DrawingParams}\n */\nexport function calcBestDrawingParams(popup, targetDimensions, fitContainerDimensions) {\n    const popupDimensions = {\n        width: popup.width,\n        height: popup.height,\n        area: popup.width * popup.height,\n    };\n    const directions = popup.directions\n        ? popup.directions\n        : (popup.isHeightAvailable && ['top-left']) || DEFAULT_DIRECTIONS;\n    let i = 0;\n    let direction = '';\n    let heightToEdge = 0;\n    let height = 0;\n    let overflow = false;\n    let newPopupDimensions = {};\n    let position = {};\n    let fitContainerFactor = 0;\n    let bestDirection = '';\n    let bestPosition = {};\n    let bestHeight = 0;\n    let bestFitContainerFactor = 0;\n\n    while (directions[i]) {\n        direction = directions[i];\n        i += 1;\n\n        if (getMainDirection(direction) === 'top') {\n            heightToEdge = targetDimensions.top - fitContainerDimensions.top;\n        } else if (getMainDirection(direction) === 'bottom') {\n            heightToEdge = fitContainerDimensions.bottom - (targetDimensions.top + targetDimensions.height);\n        }\n\n        if (popup.isHeightAdaptive) {\n            if (popup.contentHeight > heightToEdge) {\n                height = heightToEdge;\n                overflow = true;\n            } else {\n                height = popup.contentHeight;\n                overflow = false;\n            }\n\n            newPopupDimensions = {\n                width: popup.width,\n                height,\n                area: popup.width * height,\n            };\n        }\n\n        position = calcPos(direction, targetDimensions, height ? newPopupDimensions : popupDimensions, popup);\n        fitContainerFactor = calcFitContainerFactor(\n            position,\n            fitContainerDimensions,\n            popupDimensions,\n            popup.offset.fitContainer,\n        );\n\n        if (i === 1\n            || fitContainerFactor > bestFitContainerFactor\n            || (!bestFitContainerFactor && popup.bestDirection)\n        ) {\n            bestFitContainerFactor = fitContainerFactor;\n            bestDirection = direction;\n            bestPosition = position;\n            bestHeight = height;\n        }\n\n        if (bestFitContainerFactor > VIEWPORT_ACCURACY_FACTOR) {\n            break;\n        }\n    }\n\n    if (popup.isHeightAdaptive && popup.contentHeight > heightToEdge) {\n        if (getMainDirection(bestDirection) === 'top') {\n            bestPosition.top += VIEWPORT_PADDING;\n            bestHeight -= VIEWPORT_PADDING;\n        } else if (getMainDirection(bestDirection) === 'bottom') {\n            bestHeight -= VIEWPORT_PADDING;\n        }\n    }\n\n    return {\n        direction: bestDirection,\n        left: bestPosition.left,\n        top: bestPosition.top,\n        height: bestHeight || 'auto',\n        overflow,\n    };\n}\n"]}