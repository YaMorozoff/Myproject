{"version":3,"sources":["toggle/toggle.tsx"],"names":[],"mappings":"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","file":"toggle.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nexport type ToggleProps = {\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Имя компонента в DOM\n     */\n    name?: string;\n\n    /**\n     * Текст подписи к чекбоксу\n     */\n    label?: React.ReactNode;\n\n    /**\n     * Выравнивание подписи\n     */\n    labelAlign?: 'left' | 'right';\n\n    /**\n     * Подсказка под полем\n     */\n    hint?: React.ReactNode;\n\n    /**\n     * Значение чекбокса, которое будет отправлено на сервер, если он выбран\n     */\n    value?: string;\n\n    /**\n     * Управление возможностью взаимодействия с компонентом\n     */\n    disabled?: boolean;\n\n    /**\n     * Управление состоянием вкл/выкл компонента\n     */\n    checked?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Обработчик изменения значения 'checked' компонента, принимает на вход isChecked и value компонента\n     */\n    onChange?: (isChecked?: boolean, value?: string) => void;\n\n    /**\n     * Обработчик фокуса комнонента\n     */\n    onFocus?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик снятия фокуса компонента\n     */\n    onBlur?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\n/**\n * Компонент переключателя.\n */\nexport class Toggle extends React.PureComponent<ToggleProps> {\n    protected cn = createCn('toggle');\n\n    static defaultProps: Partial<ToggleProps> = {\n        size: 'm',\n        labelAlign: 'right',\n    };\n\n    state = {\n        checked: false,\n        focused: false,\n    };\n\n    render() {\n        const checked = this.props.checked === undefined ? this.state.checked : this.props.checked;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n            <label\n                className={ this.cn({\n                    checked,\n                    focused: this.state.focused,\n                    disabled: this.props.disabled,\n                    size: this.props.size,\n                }) }\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n                onMouseDown={ this.handleUnfocus }\n                onMouseUp={ this.handleUnfocus }\n                htmlFor={ this.props.id }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                <span className={ this.cn('wrapper') }>\n                    <input\n                        className={ this.cn('control') }\n                        type=\"checkbox\"\n                        autoComplete=\"off\"\n                        id={ this.props.id }\n                        name={ this.props.name }\n                        value={ this.props.value }\n                        checked={ checked }\n                        disabled={ this.props.disabled }\n                        onClick={ Toggle.handleClick }\n                        onChange={ this.handleChange }\n                    />\n                    <span className={ this.cn('switch') } />\n                    { this.props.label && (\n                        <span className={ this.cn('label', { align: this.props.labelAlign }) }>\n                            { this.props.label }\n                        </span>\n                    ) }\n                </span>\n                { this.props.hint && (\n                    <span className={ this.cn('hint') }>{ this.props.hint }</span>\n                ) }\n            </label>\n        );\n    }\n\n    static handleClick(event) {\n        event.stopPropagation();\n    }\n\n    private handleChange = () => {\n        if (!this.props.disabled) {\n            // eslint-disable-next-line react/no-access-state-in-setstate\n            const nextCheckedValue = !(this.props.checked === undefined ? this.state.checked : this.props.checked);\n\n            this.setState({ checked: nextCheckedValue });\n\n            if (this.props.onChange) {\n                this.props.onChange(nextCheckedValue, this.props.value);\n            }\n        }\n    };\n\n    private handleFocus = (event) => {\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    };\n\n    private handleUnfocus = () => setImmediate(() => this.setState({ focused: false }));\n\n    private handleBlur = (event) => {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n}\n\nexport default withTheme<ToggleProps, Toggle>(Toggle);\n"]}