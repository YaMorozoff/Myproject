{"version":3,"sources":["popup-header/popup-header.tsx"],"names":[],"mappings":"AAIA,OAAO,KAAK,MAAM,OAAO,CAAC;AAO1B,oBAAY,gBAAgB,GAAG;IAC3B;;OAEG;IACH,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;IAE9B;;OAEG;IACH,KAAK,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;IAExB;;OAEG;IACH,KAAK,CAAC,EAAE,eAAe,GAAG,eAAe,CAAC;IAE1C;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,EAAE,CAAC,EAAE,MAAM,CAAC;IAEZ;;OAEG;IACH,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IAExD;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;CAC3B,CAAC;AAEF;;GAEG;AACH,qBAAa,WAAY,SAAQ,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC;IAClE,SAAS,CAAC,EAAE;;;;;;iBAA4B;IAExC,MAAM;IAyBN,OAAO,CAAC,iBAAiB,CAIxB;CACJ;;AAED,wBAAqE","file":"popup-header.d.ts","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport IconClose from '../icon/ui/close';\nimport IconButton from '../icon-button/icon-button';\n\nexport type PopupHeaderProps = {\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Содержимое заголовка\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Обработчик клика по кнопке закрытия\n     */\n    onCloserClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\n/**\n * Заголовок в Popup.\n */\nexport class PopupHeader extends React.PureComponent<PopupHeaderProps> {\n    protected cn = createCn('popup-header');\n\n    render() {\n        return (\n            <div\n                className={ this.cn({\n                    size: this.props.size,\n                }) }\n                id={ this.props.id }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                <IconButton\n                    className={ this.cn('closer') }\n                    size={ this.props.size }\n                    onClick={ this.handleCloserClick }\n                >\n                    <IconClose\n                        size={ this.props.size }\n                    />\n                </IconButton>\n                <div className={ this.cn('title') }>\n                    { this.props.title }\n                </div>\n            </div>\n        );\n    }\n\n    private handleCloserClick = (event) => {\n        if (this.props.onCloserClick) {\n            this.props.onCloserClick(event);\n        }\n    }\n}\n\nexport default withTheme<PopupHeaderProps, PopupHeader>(PopupHeader);\n"]}