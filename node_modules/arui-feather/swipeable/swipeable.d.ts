import React from 'react';
export declare const getCoordinates: ({ touches, changedTouches, clientX, clientY, }: Partial<TouchEvent & PointerEvent>) => {
    clientX: number;
    clientY: number;
};
export declare type SwipeableProps = {
    /**
     * Число пикселей, на которое нужно сместиться, чтобы запустить функцию по свайпу
     */
    delta?: number;
    /**
     * Функция запускаемая по свайпу.
     */
    onSwipe: (direction: 'top' | 'right' | 'bottom' | 'left') => void;
    /**
     * Дочерний компонент представленный в виде единичного элемента
     * TODO: // тут должны быть такие children что у ниъ есть onMouseDown onTouchStart
     */
    children: any;
};
declare class Swipeable extends React.PureComponent<SwipeableProps> {
    static defaultProps: Partial<SwipeableProps>;
    swipeStartX: number;
    swipeStartY: number;
    deltaX: number;
    deltaY: number;
    componentWillUnmount(): void;
    render(): React.DetailedReactHTMLElement<{
        onMouseDown: (event: any) => void;
        onTouchStart: (event: any) => void;
    }, HTMLElement>;
    private handleMouseDown;
    private handleTouchStart;
    private handleSwipeStart;
    private handleSwipeEnd;
    private removeListeners;
}
export default Swipeable;
