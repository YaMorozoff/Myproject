{"version":3,"sources":["slide-down/slide-down.tsx"],"names":[],"mappings":"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","file":"slide-down.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React, { createRef } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nexport type SlideDownProps = {\n\n    /**\n     * Управление состоянием expand/collapse компонента\n     */\n    isExpanded?: boolean;\n\n    /**\n     * Контент компонента\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Обработчик события начала анимации\n     */\n    onAnimationStart?: () => void;\n\n    /**\n     * Обработчик события окончания анимации\n     */\n    onAnimationEnd?: () => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n};\n\ntype SlideDownState = {\n    height: number | string;\n    isHeightAuto: boolean;\n};\n\n/**\n * Компонент \"расхлопа\".\n * Позволяет скрывать и отображать контент.\n */\nexport class SlideDown extends React.PureComponent<SlideDownProps, SlideDownState> {\n    protected cn = createCn('slide-down');\n\n    state = {\n        height: this.props.isExpanded ? 'auto' : 0,\n        isHeightAuto: this.props.isExpanded,\n    };\n\n    private slideDown = createRef<HTMLDivElement>();\n\n    private slideDownContent = createRef<HTMLDivElement>()\n\n    componentDidUpdate(prevProps: SlideDownProps) {\n        const { isExpanded, onAnimationStart } = this.props;\n\n        if (prevProps.isExpanded !== isExpanded) {\n            if (isExpanded) {\n                this.setHeightToContentHeight();\n            } else {\n                this.setHeightToNull();\n            }\n\n            if (onAnimationStart) {\n                onAnimationStart();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div\n                className={ this.cn() }\n                id={ this.props.id }\n                style={\n                    { height: this.getHeight() }\n                }\n                onTransitionEnd={ this.handleTransitionEnd }\n                ref={ this.slideDown }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                <div\n                    className={ this.cn('content', { expanded: this.state.isHeightAuto }) }\n                    ref={ this.slideDownContent }\n                >\n                    { this.props.children }\n                </div>\n            </div>\n        );\n    }\n\n    private handleTransitionEnd = (event: React.TransitionEvent<HTMLDivElement>) => {\n        if (event.propertyName === 'height' && this.props.isExpanded) {\n            this.setAutoHeight();\n        }\n        if (this.props.onAnimationEnd) {\n            this.props.onAnimationEnd();\n        }\n    };\n\n    private getHeight() {\n        return this.state.isHeightAuto\n            ? 'auto'\n            : this.state.height;\n    }\n\n    private setHeightToContentHeight() {\n        if (this.slideDownContent.current) {\n            this.setState({\n                isHeightAuto: false,\n                height: this.slideDownContent.current.offsetHeight,\n            });\n        }\n    }\n\n    private setHeightToNull() {\n        this.setHeightToContentHeight();\n\n        // Заставляем React перерисовать элемент\n        this.forceUpdate(() => {\n            // Заставляем браузер сделать reflow\n            if (this.slideDown.current) {\n                this.slideDown.current.getBoundingClientRect();\n            }\n\n            this.setState({ height: 0 });\n        });\n    }\n\n    private setAutoHeight() {\n        this.setState({\n            isHeightAuto: true,\n        });\n    }\n}\n\nexport default withTheme<SlideDownProps, SlideDown>(SlideDown);\n"]}