{"version":3,"sources":["list/list.tsx"],"names":[],"mappings":";AAAA;;8DAE8D;;;;;;;;;;;;;;;;;;;;;;;;AAE9D,gDAA0B;AAC1B,2DAA+C;AAC/C,4BAAkC;AAElC,+DAAyC;AAqDzC;;GAEG;AAEH;IAA0B,wBAA0B;IAApD;QAAA,qEAiCC;QAhCa,QAAE,GAAG,8BAAQ,CAAC,MAAM,CAAC,CAAC;;IAgCpC,CAAC;aAjCY,IAAI;IAGb,qBAAM,GAAN;QAAA,iBA6BC;QA5BS,IAAA,eAA4B,EAA1B,gBAAK,EAAE,cAAmB,CAAC;QACnC,IAAM,WAAW,GAAG,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAErD,IAAM,WAAW,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,EAAoB;gBAAlB,YAAG,EAAE,gBAAK,EAAE,cAAI;YAAO,OAAA,CAC5D,sCACI,GAAG,EAAG,UAAQ,GAAK,EACnB,SAAS,EAAG,KAAI,CAAC,EAAE,CAAC,MAAM,CAAC;gBAEzB,KAAK;gBAEH,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;oBACvB,CAAC,CAAC,8BAAC,MAAI,IAAC,KAAK,EAAG,IAAI,EAAG,IAAI,EAAG,IAAI,GAAK;oBACvC,CAAC,CAAC,EAAE,CAEX,CACR;QAZ+D,CAY/D,CAAC,CAAC;QAEH,IAAM,SAAS,GAAG;YACd,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC;YAC5B,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;YACjB,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;SAC7C,CAAC;QAEF,OAAO,eAAK,CAAC,aAAa,CACtB,WAAW,EACX,SAAS,EACT,WAAW,CACd,CAAC;IACN,CAAC;;IAhCQ,IAAI;QADhB,qBAAW,CAAC,IAAI,CAAC;OACL,IAAI,CAiChB;IAAD,WAAC;CAjCD,AAiCC,CAjCyB,eAAK,CAAC,SAAS,GAiCxC;AAjCY,oBAAI;AAmCjB,kBAAe,cAAS,CAAkB,IAAI,CAAC,CAAC","file":"list.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport performance from '../performance';\n\ntype ListItemsType = {\n\n    /**\n     * Уникальный ключ элемента\n     */\n    key: string;\n\n    /**\n     * Содержание элемента\n     */\n    value: React.ReactNode;\n\n    /**\n     * Вложенный список элементов\n     */\n    list?: readonly ListItemsType[];\n};\n\nexport type ListProps = {\n\n    /**\n     * Список элементов\n     */\n    items?: readonly ListItemsType[];\n\n    /**\n     * Тип списка\n     */\n    type?: 'default' | 'ordered';\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\n/**\n * Компонент списка.\n */\n@performance(true)\nexport class List extends React.Component<ListProps> {\n    protected cn = createCn('list');\n\n    render() {\n        const { items, type } = this.props;\n        const listElement = type === 'ordered' ? 'ol' : 'ul';\n\n        const listContent = (items || []).map(({ key, value, list }) => (\n            <li\n                key={ `item-${key}` }\n                className={ this.cn('item') }\n            >\n                { value }\n                {\n                    list && Array.isArray(list)\n                        ? <List items={ list } type={ type } />\n                        : ''\n                }\n            </li>\n        ));\n\n        const listProps = {\n            className: this.cn({ type }),\n            id: this.props.id,\n            'data-test-id': this.props['data-test-id'],\n        };\n\n        return React.createElement(\n            listElement,\n            listProps,\n            listContent,\n        );\n    }\n}\n\nexport default withTheme<ListProps, List>(List);\n"]}