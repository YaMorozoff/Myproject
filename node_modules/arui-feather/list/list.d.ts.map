{"version":3,"sources":["list/list.tsx"],"names":[],"mappings":"AAIA,OAAO,KAAK,MAAM,OAAO,CAAC;AAM1B,aAAK,aAAa,GAAG;IAEjB;;OAEG;IACH,GAAG,EAAE,MAAM,CAAC;IAEZ;;OAEG;IACH,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC;IAEvB;;OAEG;IACH,IAAI,CAAC,EAAE,SAAS,aAAa,EAAE,CAAC;CACnC,CAAC;AAEF,oBAAY,SAAS,GAAG;IAEpB;;OAEG;IACH,KAAK,CAAC,EAAE,SAAS,aAAa,EAAE,CAAC;IAEjC;;OAEG;IACH,IAAI,CAAC,EAAE,SAAS,GAAG,SAAS,CAAC;IAE7B;;OAEG;IACH,KAAK,CAAC,EAAE,eAAe,GAAG,eAAe,CAAC;IAE1C;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,EAAE,CAAC,EAAE,MAAM,CAAC;IAEZ;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;CAC3B,CAAC;AAEF;;GAEG;AACH,qBACa,IAAK,SAAQ,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;IAChD,SAAS,CAAC,EAAE;;;;;;iBAAoB;IAEhC,MAAM;;;;;CA8BT;;AAED,wBAAgD","file":"list.d.ts","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport performance from '../performance';\n\ntype ListItemsType = {\n\n    /**\n     * Уникальный ключ элемента\n     */\n    key: string;\n\n    /**\n     * Содержание элемента\n     */\n    value: React.ReactNode;\n\n    /**\n     * Вложенный список элементов\n     */\n    list?: readonly ListItemsType[];\n};\n\nexport type ListProps = {\n\n    /**\n     * Список элементов\n     */\n    items?: readonly ListItemsType[];\n\n    /**\n     * Тип списка\n     */\n    type?: 'default' | 'ordered';\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\n/**\n * Компонент списка.\n */\n@performance(true)\nexport class List extends React.Component<ListProps> {\n    protected cn = createCn('list');\n\n    render() {\n        const { items, type } = this.props;\n        const listElement = type === 'ordered' ? 'ol' : 'ul';\n\n        const listContent = (items || []).map(({ key, value, list }) => (\n            <li\n                key={ `item-${key}` }\n                className={ this.cn('item') }\n            >\n                { value }\n                {\n                    list && Array.isArray(list)\n                        ? <List items={ list } type={ type } />\n                        : ''\n                }\n            </li>\n        ));\n\n        const listProps = {\n            className: this.cn({ type }),\n            id: this.props.id,\n            'data-test-id': this.props['data-test-id'],\n        };\n\n        return React.createElement(\n            listElement,\n            listProps,\n            listContent,\n        );\n    }\n}\n\nexport default withTheme<ListProps, List>(List);\n"]}