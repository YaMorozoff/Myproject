/// <reference types="react" />
declare type CnModifierMap = {
    [key: string]: boolean | string;
};
export interface CnFn {
    (map?: CnModifierMap): string;
    (elem: string, map?: CnModifierMap): string;
}
interface ClassDecorator {
    <TFunction extends Function>(target: TFunction): TFunction | void;
}
/**
 * @deprecated
 */
declare const cnDecorator: (blockName: string) => ClassDecorator;
/**
 * @deprecated
 */
export default cnDecorator;
export declare type ThemeType = 'alfa-on-color' | 'alfa-on-white';
export declare const withTheme: <P extends {
    theme?: ThemeType;
}, U extends import("react").ReactNode>(Component: import("react").ComponentType<P>) => import("react").ForwardRefExoticComponent<import("react").PropsWithoutRef<P> & import("react").RefAttributes<U>> & U, ThemeProvider: import("react").Provider<ThemeType>;
