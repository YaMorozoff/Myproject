{"version":3,"sources":["dropzone/dropzone.tsx"],"names":[],"mappings":"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","file":"dropzone.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint-disable max-len */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nexport type DropzoneProps = {\n\n    /**\n     * Дочерние компоненты\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n    /**\n     * Уникальный идентификатор блока\n     */\n    id?: string;\n\n    /**\n     * Уникальное имя блока\n     */\n    name?: string;\n\n    /**\n     * Обработчик события 'drop'\n     */\n    onDrop?: (files?: any[]) => void;\n\n    /**\n     * Обработчик события 'dragover'\n     */\n    onDragOver?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик события 'dragleave'\n     */\n    onDragLeave?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик события 'dragenter'\n     */\n    onDragEnter?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Текст-подсказка поверх drop-зоны\n     */\n    text?: string;\n\n};\n\n/**\n * Компонент drag-and-drop контейнер для прикрепления файлов.\n */\nexport class Dropzone extends React.PureComponent<DropzoneProps> {\n    protected cn = createCn('dropzone');\n\n    static defaultProps: Partial<DropzoneProps> = {\n        theme: 'alfa-on-white',\n        text: 'Поместите файлы сюда',\n    };\n\n    state = {\n        dragging: false,\n    };\n\n    // TODO [issues/1018] на private ругается\n    root: HTMLSpanElement;\n\n    private dragCounter: number;\n\n    private handleDragOver = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.props.onDragOver) {\n            this.props.onDragOver(event);\n        }\n    }\n\n    private handleDragEnter = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.dragCounter += 1;\n        if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n            this.setState({ dragging: true });\n        }\n\n        if (this.props.onDragEnter) {\n            this.props.onDragEnter(event);\n        }\n    };\n\n    private handleDragLeave = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.dragCounter -= 1;\n        if (this.dragCounter > 0) {\n            return;\n        }\n        this.setState({ dragging: false });\n\n        if (this.props.onDragLeave) {\n            this.props.onDragLeave(event);\n        }\n    };\n\n    private handleDrop = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ dragging: false });\n\n        if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\n            if (this.props.onDrop) {\n                this.props.onDrop(event.dataTransfer.files);\n            }\n\n            event.dataTransfer.clearData();\n            this.dragCounter = 0;\n        }\n    };\n\n    componentDidMount() {\n        this.dragCounter = 0;\n    }\n\n    render() {\n        return (\n            <div\n                ref={ (root) => {\n                    this.root = root;\n                } }\n                id={ this.props.id }\n                data-test-id={ this.props['data-test-id'] }\n                className={ this.cn() }\n                onDragEnter={ this.handleDragEnter }\n                onDragLeave={ this.handleDragLeave }\n                onDragOver={ this.handleDragOver }\n                onDrop={ this.handleDrop }\n            >\n                <div className={ this.cn('view', { active: this.state.dragging }) }>\n                    { this.props.text }\n                </div>\n                { this.props.children }\n            </div>\n        );\n    }\n}\n\nexport default withTheme<DropzoneProps, Dropzone>(Dropzone);\n"]}