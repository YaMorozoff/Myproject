"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable max-len */
var react_1 = __importDefault(require("react"));
var bem_react_classname_1 = require("bem-react-classname");
var cn_1 = require("../cn");
/**
 * Компонент drag-and-drop контейнер для прикрепления файлов.
 */
var Dropzone = /** @class */ (function (_super) {
    __extends(Dropzone, _super);
    function Dropzone() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.cn = bem_react_classname_1.createCn('dropzone');
        _this.state = {
            dragging: false,
        };
        _this.handleDragOver = function (event) {
            event.preventDefault();
            event.stopPropagation();
            if (_this.props.onDragOver) {
                _this.props.onDragOver(event);
            }
        };
        _this.handleDragEnter = function (event) {
            event.preventDefault();
            event.stopPropagation();
            _this.dragCounter += 1;
            if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {
                _this.setState({ dragging: true });
            }
            if (_this.props.onDragEnter) {
                _this.props.onDragEnter(event);
            }
        };
        _this.handleDragLeave = function (event) {
            event.preventDefault();
            event.stopPropagation();
            _this.dragCounter -= 1;
            if (_this.dragCounter > 0) {
                return;
            }
            _this.setState({ dragging: false });
            if (_this.props.onDragLeave) {
                _this.props.onDragLeave(event);
            }
        };
        _this.handleDrop = function (event) {
            event.preventDefault();
            event.stopPropagation();
            _this.setState({ dragging: false });
            if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {
                if (_this.props.onDrop) {
                    _this.props.onDrop(event.dataTransfer.files);
                }
                event.dataTransfer.clearData();
                _this.dragCounter = 0;
            }
        };
        return _this;
    }
    Dropzone.prototype.componentDidMount = function () {
        this.dragCounter = 0;
    };
    Dropzone.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (root) {
                _this.root = root;
            }, id: this.props.id, "data-test-id": this.props['data-test-id'], className: this.cn(), onDragEnter: this.handleDragEnter, onDragLeave: this.handleDragLeave, onDragOver: this.handleDragOver, onDrop: this.handleDrop },
            react_1.default.createElement("div", { className: this.cn('view', { active: this.state.dragging }) }, this.props.text),
            this.props.children));
    };
    Dropzone.defaultProps = {
        theme: 'alfa-on-white',
        text: 'Поместите файлы сюда',
    };
    return Dropzone;
}(react_1.default.PureComponent));
exports.Dropzone = Dropzone;
exports.default = cn_1.withTheme(Dropzone);

//# sourceMappingURL=dropzone.js.map
