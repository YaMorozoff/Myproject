{"version":3,"sources":["theme-provider/theme-provider.tsx"],"names":[],"mappings":";AAAA;;8DAE8D;;;;;;;;;;;;;;;;;;AAE9D,gDAA0B;AAC1B,0DAA8B;AAC9B,4BAA0D;AAmB1D;;;GAGG;AACH;IAA4B,iCAAmC;IAA/D;;IAsBA,CAAC;IAbG,uCAAe,GAAf;QACI,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;SAC1B,CAAC;IACN,CAAC;IAED,8BAAM,GAAN;QACI,OAAO,CACH,8BAAC,kBAAgB,IAAC,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IACpC,eAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAC3B,CACtB,CAAC;IACN,CAAC;IApBM,0BAAY,GAAG;QAClB,KAAK,EAAE,oBAAI,CAAC,MAAM;KACrB,CAAC;IAEK,+BAAiB,GAAG;QACvB,KAAK,EAAE,oBAAI,CAAC,MAAM;KACrB,CAAC;IAeN,oBAAC;CAtBD,AAsBC,CAtB2B,eAAK,CAAC,SAAS,GAsB1C;AAED,kBAAe,aAAa,CAAC","file":"theme-provider.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\nimport { ThemeProvider as NewThemeProvider } from '../cn';\n\nexport type ThemeProviderProps = {\n    /**\n     * Дочерний элемент `ThemeProvider`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n};\n\n/**\n * Компонент задающий тему для своих дочерних компонентов.\n * Важно! Может содержать в себе строго один дочерний компонент.\n */\nclass ThemeProvider extends React.Component<ThemeProviderProps> {\n    static contextTypes = {\n        theme: Type.string,\n    };\n\n    static childContextTypes = {\n        theme: Type.string,\n    };\n\n    getChildContext() {\n        return {\n            theme: this.props.theme,\n        };\n    }\n\n    render() {\n        return (\n            <NewThemeProvider value={ this.props.theme }>\n                { React.Children.only(this.props.children) }\n            </NewThemeProvider>\n        );\n    }\n}\n\nexport default ThemeProvider;\n"]}