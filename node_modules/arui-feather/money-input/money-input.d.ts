import React from 'react';
import { InputProps } from '../input/input';
declare type MoneyInputProps = InputProps & {
    /**
     * Максимально допустимая длина значения до запятой
     */
    integerLength?: number;
    /**
     * Максимально допустимая длина значения после запятой
     */
    fractionLength?: number;
    /**
     * Толщина шрифта
     */
    bold?: boolean;
    /**
     * Отображение символа валюты
     */
    showCurrency?: boolean;
    /**
     * Международный код валюты
     */
    currencyCode?: string;
    /**
     * Идентификатор для систем автоматизированного тестирования
     * */
    'data-test-id'?: string;
    /**
     * Обработчик события, вызываемый при событии 'change'
     * */
    onChange?: (value?: string, amount?: number) => void;
};
declare type MoneyInputState = {
    value: string;
};
/**
 * Компонент поля для ввода суммы. Может принимать в качестве значения либо число, либо число с сотой долей.
 */
export declare class MoneyInput extends React.PureComponent<MoneyInputProps, MoneyInputState> {
    protected cn: (this: void | {
        props?: Record<string, unknown>;
    }, elementNameOrMods?: string | {
        [key: string]: string | number | boolean;
    }, mods?: {
        [key: string]: string | number | boolean;
    }) => string;
    static defaultProps: Partial<MoneyInputProps>;
    state: {
        value: string;
    };
    private maskPattern;
    private mask;
    root: HTMLInputElement;
    private caretFixTimeout;
    UNSAFE_componentWillMount(): void;
    UNSAFE_componentWillReceiveProps(nextProps: any): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private handleProcessMaskInputEvent;
    private handleChange;
    /**
     * Устанавливает фокус на поле ввода.
     */
    focus(): void;
    /**
     * Убирает фокус с поля ввода.
     */
    blur(): void;
    /**
     * Скроллит страницу до поля ввода.
     */
    scrollTo(): void;
    /**
     * Обновляет маску по значению: группирует целую часть в блоки по три символа.
     *
     * @param value Значение
     */
    private updateMaskByValue;
    /**
     * Расчитывает максимально допустимую длинну поля ввода.
     */
    private getMaxLength;
    /**
     * Возвращает актуальное значение для рендера.
     */
    private getValue;
    /**
     * Устанавливает каретку поля ввода в новую позицию.
     *
     * @param selection Новое положение каретки
     */
    private setInputSelection;
    /**
     * Устанавливает каретку поля ввода в заданную позицию асинхронно.
     *
     * Во-избежание дефекта с установкой каретки, наблюдаемом в мобильных браузерах,
     * установка происходит асинхронно, с минимальной задержкой,
     * с помощью [setTimeout] обертки.
     *
     * @param selection Положение каретки
     */
    private setInputSelectionByTimeout;
    /**
     * Возвращает значение (невидимый текст) для корректного отображения значка валюты.
     */
    private getCurrencySpacer;
}
declare const _default: React.ForwardRefExoticComponent<InputProps & {
    /**
     * Максимально допустимая длина значения до запятой
     */
    integerLength?: number;
    /**
     * Максимально допустимая длина значения после запятой
     */
    fractionLength?: number;
    /**
     * Толщина шрифта
     */
    bold?: boolean;
    /**
     * Отображение символа валюты
     */
    showCurrency?: boolean;
    /**
     * Международный код валюты
     */
    currencyCode?: string;
    /**
     * Идентификатор для систем автоматизированного тестирования
     * */
    'data-test-id'?: string;
    /**
     * Обработчик события, вызываемый при событии 'change'
     * */
    onChange?: (value?: string, amount?: number) => void;
} & React.RefAttributes<MoneyInput>> & MoneyInput;
export default _default;
