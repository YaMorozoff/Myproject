{"version":3,"sources":["grid-row/grid-row.tsx"],"names":[],"mappings":"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","file":"grid-row.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React, { Children, cloneElement, ReactElement } from 'react';\nimport { createCn } from 'bem-react-classname';\n\ntype GridRowGutterType = {\n    mobile?: string | number | object;\n    tablet?: string | number | object;\n    desktop?: string | number | object;\n};\n\nexport type GridRowProps = {\n\n    /**\n     * Уникальный идентификатор блока\n     */\n    id?: string;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Горизонтальный отступ между колонками.\n     * Возможные значения: `8n` px (n - натуральное число) из диапазона `[0, 8, 16, 24]`\n     * или `{ mobile: [0..24], tablet: [0..24], desktop: [0..24] }`\n     * или `{ mobile: { s: [0..24], m: [0..24], l: [0..24] },\n     * tablet: { s: [0..24], m: [0..24] },\n     * desktop: { s: [0..24], m: [0..24], l: [0..24], xl: [0..24] } }`.\n     */\n    gutter?: string | number | GridRowGutterType;\n\n    /**\n     * Управление выравниванием колонок по вертикальной оси\n     */\n    align?: 'top' | 'middle' | 'bottom';\n\n    /**\n     * Управление выравниванием колонок по горизонтальной оси\n     */\n    justify?: 'left' | 'center' | 'right' | 'around' | 'between';\n\n    /**\n     * Html тег компонента.\n     * Из-за <a href=\"https://github.com/philipwalton/flexbugs#flexbug-9\" target=\"_blank\">ограничений и багов</a>,\n     * существующих во флексбоксах, невозможно использовать\n     * некоторые элементы HTML как flex-контейнеры</a>.\n     */\n    tag?: keyof JSX.IntrinsicElements;\n\n    /**\n     * Дочерние элементы `GridRow`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n};\n\n/**\n * Строка используется для создания сетки.\n * Сетка имеет резиновую систему разметки, которая масштабируется до 12 столбцов.\n */\nexport class GridRow extends React.PureComponent<GridRowProps> {\n    protected cn = createCn('grid-row');\n\n    static defaultProps: Partial<GridRowProps> = {\n        tag: 'div',\n        gutter: {\n            mobile: {\n                s: 16,\n            },\n            desktop: {\n                m: 24,\n            },\n        },\n        justify: 'between',\n    }\n\n    /**\n     * Класс колонки\n     */\n    private classCol = 'grid-col'\n\n    render() {\n        const {\n            tag: Tag,\n            gutter,\n            align,\n            justify,\n            children,\n            ...props\n        } = this.props;\n\n        let gutters = {};\n\n        if (typeof gutter === 'object') {\n            Object.keys(gutter).forEach((breakpoint) => {\n                if (gutter[breakpoint] === null) {\n                    return;\n                }\n                if (typeof gutter[breakpoint] === 'object') {\n                    Object.keys(gutter[breakpoint]).forEach((size) => {\n                        if (gutter[breakpoint][size] === null) {\n                            return;\n                        }\n                        gutters[`gutter-${breakpoint}-${size}`] = gutter[breakpoint][size].toString();\n                    });\n                } else {\n                    gutters[`gutter-${breakpoint}`] = gutter[breakpoint].toString();\n                }\n            });\n        } else {\n            gutters = { gutter };\n        }\n\n        return (\n            <Tag\n                { ...props }\n                className={ this.cn({\n                    ...gutters,\n                    align,\n                    justify,\n                }) }\n            >\n                { this.injectGutterClassNamesToChildren(gutters, children as ReactElement) }\n            </Tag>\n        );\n    }\n\n    /**\n     * Добавляет модификаторы горизонтальных отступов в дочерний элемент.\n     *\n     * @param gutters Модификаторы горизонтальных отступов\n     * @param children Дочерние элементы компонента.\n     */\n    private injectGutterClassNamesToChildren(gutters: object, children: React.ReactElement) {\n        return (\n            Children.map(children, (col) => {\n                if (!col) {\n                    return null;\n                }\n                if (!col.props) {\n                    return col;\n                }\n                const gutterClassNames = Object.keys(gutters).map(\n                    (gutter) => `${this.classCol}_${gutter}_${gutters[gutter]}`,\n                );\n                const classNameFromProps = col.props.className ? ` ${col.props.className}` : '';\n\n                return cloneElement(col, { className: `${gutterClassNames.join(' ')}${classNameFromProps}` });\n            })\n        );\n    }\n}\n\nexport default GridRow;\n"]}