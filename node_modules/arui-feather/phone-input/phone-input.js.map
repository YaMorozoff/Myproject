{"version":3,"sources":["phone-input/phone-input.tsx"],"names":[],"mappings":"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","file":"phone-input.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// @ts-nocheck\n\n/* eslint-disable max-len */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport Input, { InputProps } from '../input/input';\n\nexport type PhoneInputProps = InputProps & {\n    /**\n     * Определяет маску для ввода значений.\n     * <a href=\"https://github.com/insin/inputmask-core#pattern\" target=\"_blank\">Шаблон маски</a>\n     */\n    mask?: string;\n    /**\n     * Подсказка в текстовом поле\n     */\n    placeholder?: string;\n};\n\ntype PhoneInputState = {\n    updatedValue?: string;\n}\n\n/**\n * Компонент ввода телефона по маске.\n */\nexport class PhoneInput extends React.PureComponent<PhoneInputProps, PhoneInputState> {\n    protected cn = createCn('phone-input');\n\n    static defaultProps: Partial<PhoneInputProps> = {\n        mask: '+1 111 111 11 11',\n        placeholder: '+7 000 000 00 00',\n    };\n\n    state = {\n        updatedValue: undefined,\n    };\n\n    root;\n\n    render() {\n        const { value } = this.props;\n        const { updatedValue } = this.state;\n\n        return (\n            <Input\n                { ...this.props }\n                type=\"tel\"\n                ref={ (root) => {\n                    this.root = root;\n                } }\n                formNoValidate={ true }\n                className={ this.cn() }\n                onChange={ this.handleChange }\n                value={ updatedValue === undefined ? value : updatedValue }\n            />\n        );\n    }\n\n    /**\n     * Промежуточный обработчик value после изменения значения.\n     * В value проверяется, что первый числовой символ 7,\n     * если 7, то ничего не делаем\n     * если 8, то происходит замена на 7\n     * иначе вставляем 7, а остальное сдвигаем\n     */\n    private handleChange = (value?: string, event?: React.ChangeEvent<any>) => {\n        const { onChange } = this.props;\n        let valueForOnChange = value;\n\n        if (value?.length > 1 && !/^\\+7.*$/.test(value)) {\n            const [plus, code]: [string, string] = value;\n\n            if (code === '8') {\n                valueForOnChange = value.replace(/^\\+(8)(.*)$/, '+7$2');\n            } else {\n                valueForOnChange = `${plus}7${PhoneInput.shiftValue(value.slice(1).replace(/\\s/g, ''))}`;\n            }\n        } else if (value?.length === 1) {\n            valueForOnChange = '';\n        }\n        if (onChange) {\n            onChange(valueForOnChange, event);\n        } else {\n            this.setState({ updatedValue: valueForOnChange });\n        }\n    };\n\n    static shiftValue(originalValue: string, mask = ' 111 111 11 11'): string {\n        let shiftedValue = '';\n        let specCounter = 0;\n\n        mask.split('').forEach((sym, index) => {\n            if (sym !== '1' && originalValue[index - specCounter]) {\n                shiftedValue += sym;\n                specCounter += 1;\n            } else {\n                shiftedValue += originalValue[index - specCounter] || '';\n            }\n        });\n\n        return shiftedValue;\n    }\n\n    /**\n     * Устанавливает фокус на поле ввода.\n     */\n    public focus() {\n        this.root.focus();\n    }\n\n    /**\n     * Убирает фокус с поля ввода.\n     */\n    public blur() {\n        this.root.blur();\n    }\n\n    /**\n     * Скроллит страницу до поля ввода.\n     */\n    public scrollTo() {\n        this.root.scrollTo();\n    }\n}\n\nexport default withTheme<PhoneInputProps, PhoneInput>(PhoneInput);\n"]}