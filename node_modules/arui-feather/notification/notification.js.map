{"version":3,"sources":["notification/notification.tsx"],"names":[],"mappings":"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","file":"notification.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint jsx-a11y/no-static-element-interactions: 0 */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport IconClose from '../icon/ui/close';\nimport IconError from '../icon/ui/error';\nimport IconFail from '../icon/ui/fail';\nimport IconOk from '../icon/ui/ok';\nimport IconButton from '../icon-button/icon-button';\nimport Swipeable from '../swipeable';\n\nimport { isNodeOutsideElement } from '../lib/window';\n\nexport type NotificationProps = {\n    /**\n     * Тип компонента\n     */\n    status?: 'error' | 'fail' | 'ok';\n\n    /**\n     * Управление видимостью компонента\n     */\n    visible?: boolean;\n\n    /**\n     * Отступ от верхнего края\n     */\n    offset?: number;\n\n    /**\n     * К какому краю прижат попап\n     */\n    stickTo?: 'left' | 'right';\n\n    /**\n     * Управляет отображением кнопки закрытия уведомления\n     */\n    hasCloser?: boolean;\n\n    /**\n     * Дочерние элементы `Notification`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Заголовок сообщения\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Замена стандартной иконки\n     */\n    icon?: React.ReactNode;\n\n    /**\n     * Время до закрытия компонента\n     */\n    autoCloseDelay?: number;\n\n    /**\n     * Обработчик события истечения времени до закрытия компонента\n     */\n    onCloseTimeout?: () => void;\n\n    /**\n     * Обработчик клика по крестику компонента\n     */\n    onCloserClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте\n     */\n    onKeyDown?: (event?: React.KeyboardEvent<any>) => void;\n\n    /**\n     * Обработчик события наведения курсора на попап\n     */\n    onMouseEnter?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события снятия курсора с попапа\n     */\n    onMouseLeave?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик клика вне компонента\n     */\n    onClickOutside?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик клика по компоненту\n     */\n    onClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\n/**\n * Компонент всплывающего окна.\n */\nexport class Notification extends React.PureComponent<NotificationProps> {\n    protected cn = createCn('notification')\n\n    static defaultProps: Partial<NotificationProps> = {\n        autoCloseDelay: 5000,\n        stickTo: 'right',\n        offset: 12,\n        hasCloser: true,\n    };\n\n    state = {\n        hovered: false,\n    };\n\n    private root: HTMLDivElement;\n\n    private closeTimeout = null;\n\n    private clickEventBindTimeout = null;\n\n    private isWindowClickBinded = false;\n\n    componentDidMount() {\n        this.startCloseTimer();\n\n        if (this.props.onClickOutside) {\n            this.ensureClickEvent();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.onClickOutside !== this.props.onClickOutside) {\n            this.ensureClickEvent();\n        } else if (prevProps.visible !== this.props.visible) {\n            this.ensureClickEvent(!this.props.visible);\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopCloseTimer();\n\n        if (this.props.onClickOutside) {\n            this.ensureClickEvent(true);\n        }\n    }\n\n    render() {\n        let ToggledIcon;\n\n        switch (this.props.status) {\n        case 'error': ToggledIcon = IconError; break;\n        case 'fail': ToggledIcon = IconFail; break;\n        case 'ok': ToggledIcon = IconOk; break;\n        default: ToggledIcon = IconOk; break;\n        }\n\n        return (\n            <Swipeable onSwipe={ this.handleSwipe }>\n                <div\n                    ref={ (root) => {\n                        this.root = root;\n                    } }\n                    className={ this.cn({\n                        visible: this.props.visible,\n                        status: this.props.status,\n                        hovered: this.state.hovered,\n                        'has-closer': this.props.hasCloser,\n                        'stick-to': this.props.stickTo,\n                    }) }\n                    id={ this.props.id }\n                    style={ this.getPosition() }\n                    onMouseEnter={ this.handleMouseEnter }\n                    onMouseLeave={ this.handleMouseLeave }\n                    onClick={ this.handleClick }\n                    onKeyDown={ this.handleKeyDown }\n                    data-test-id={ this.props['data-test-id'] }\n                >\n                    <div className={ this.cn('icon') }>\n                        {\n                            this.props.icon\n                            || (\n                                <ToggledIcon\n                                    colored={ this.props.status === 'ok' || this.props.status === 'error' }\n                                    theme={ this.props.theme === 'alfa-on-color' ? 'alfa-on-white' : 'alfa-on-color' }\n                                    size=\"m\"\n                                />\n                            )\n                        }\n                    </div>\n                    { this.props.title\n                        && (\n                            <div className={ this.cn('title') }>\n                                { this.props.title }\n                            </div>\n                        ) }\n                    { this.props.children\n                        && (\n                            <div className={ this.cn('content') }>\n                                { this.props.children }\n                            </div>\n                        ) }\n                    {\n                        this.props.hasCloser\n                        && (\n                            <IconButton\n                                className={ this.cn('closer') }\n                                size=\"m\"\n                                onClick={ this.handleCloserClick }\n                            >\n                                <IconClose\n                                    size=\"s\"\n                                    theme={ this.props.theme === 'alfa-on-color' ? 'alfa-on-white' : 'alfa-on-color' }\n                                />\n                            </IconButton>\n                        )\n                    }\n                </div>\n            </Swipeable>\n        );\n    }\n\n    private handleSwipe = (direction) => {\n        if (direction === 'left' || direction === 'right' || direction === 'top') {\n            this.handleCloserClick();\n        }\n    };\n\n    private handleCloserClick = (event?) => {\n        if (this.props.onCloserClick) {\n            this.props.onCloserClick(event);\n        }\n    };\n\n    private handleKeyDown = (event) => {\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    };\n\n    private handleMouseEnter = (event) => {\n        this.setState({ hovered: true });\n        this.stopCloseTimer();\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    };\n\n    private handleMouseLeave = (event) => {\n        this.setState({ hovered: false });\n        this.stopCloseTimer();\n        this.startCloseTimer();\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    };\n\n    private handleClick = (event) => {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    };\n\n    private handleWindowClick = (event) => {\n        if (this.props.onClickOutside && this.root\n            && isNodeOutsideElement(event.target, this.root)\n        ) {\n            this.props.onClickOutside(event);\n        }\n    };\n\n    private getPosition() {\n        return { top: this.props.offset };\n    }\n\n    private startCloseTimer() {\n        this.closeTimeout = setTimeout(() => {\n            if (this.props.onCloseTimeout) {\n                this.props.onCloseTimeout();\n            }\n        }, this.props.autoCloseDelay);\n    }\n\n    private stopCloseTimer() {\n        clearTimeout(this.closeTimeout);\n        this.closeTimeout = null;\n    }\n\n    private ensureClickEvent(isDestroy?) {\n        const isNeedBindEvent = isDestroy === undefined ? this.props.visible : !isDestroy;\n\n        // We need timeouts to not to catch the event that causes\n        // popup opening (because it propagates to the `window`).\n        if (this.clickEventBindTimeout) {\n            clearTimeout(this.clickEventBindTimeout);\n            this.clickEventBindTimeout = null;\n        }\n\n        this.clickEventBindTimeout = setTimeout(() => {\n            if (!this.isWindowClickBinded && isNeedBindEvent) {\n                window.addEventListener('click', this.handleWindowClick);\n                window.addEventListener('touchend', this.handleWindowClick);\n                this.isWindowClickBinded = true;\n            } else if (this.isWindowClickBinded && !isNeedBindEvent) {\n                window.removeEventListener('click', this.handleWindowClick);\n                window.removeEventListener('touchend', this.handleWindowClick);\n                this.isWindowClickBinded = false;\n            }\n        }, 0);\n    }\n}\n\nexport default withTheme<NotificationProps, Notification>(Notification);\n"]}