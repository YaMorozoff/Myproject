{"version":3,"sources":["label/label.tsx"],"names":[],"mappings":";AAAA;;8DAE8D;;;;;;;;;;;;;;;;;;AAE9D,gDAA0B;AAC1B,2DAA+C;AAC/C,4BAAkC;AAuClC;;GAEG;AAEH;IAA2B,yBAA+B;IAA1D;QAAA,qEAwBC;QAvBa,QAAE,GAAG,8BAAQ,CAAC,OAAO,CAAC,CAAC;;IAuBrC,CAAC;IAhBG,sBAAM,GAAN;QACI,OAAO,CACH,wCACI,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC;gBAChB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;aACjC,CAAC,EACF,EAAE,EAAG,IAAI,CAAC,KAAK,CAAC,EAAE,kBACH,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;YAEzC,wCAAM,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAClB,CACJ,CACV,CAAC;IACN,CAAC;IApBM,kBAAY,GAAwB;QACvC,IAAI,EAAE,GAAG;QACT,QAAQ,EAAE,KAAK;KAClB,CAAC;IAkBN,YAAC;CAxBD,AAwBC,CAxB0B,eAAK,CAAC,aAAa,GAwB7C;AAxBY,sBAAK;AA0BlB,kBAAe,cAAS,CAAoB,KAAK,CAAC,CAAC","file":"label.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nexport type LabelProps = {\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl' | '2xl' | '3xl' | '4xl';\n\n    /**\n     * Дочерние элементы `Label`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Управление возможностью рендерить компонент в одну сроку\n     */\n    isNoWrap?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\n/**\n * Компонента лейбла.\n */\n\nexport class Label extends React.PureComponent<LabelProps> {\n    protected cn = createCn('label');\n\n    static defaultProps: Partial<LabelProps> = {\n        size: 'm',\n        isNoWrap: false,\n    };\n\n    render() {\n        return (\n            <span\n                className={ this.cn({\n                    size: this.props.size,\n                    'no-wrap': this.props.isNoWrap,\n                }) }\n                id={ this.props.id }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                <span className={ this.cn('inner') }>\n                    { this.props.children }\n                </span>\n            </span>\n        );\n    }\n}\n\nexport default withTheme<LabelProps, Label>(Label);\n"]}