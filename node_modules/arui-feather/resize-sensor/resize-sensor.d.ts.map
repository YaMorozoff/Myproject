{"version":3,"sources":["resize-sensor/resize-sensor.tsx"],"names":[],"mappings":"AAIA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,oBAAY,iBAAiB,GAAG;IAC5B;;OAEG;IACH,QAAQ,CAAC,EAAE,MAAM,IAAI,CAAC;CACzB,CAAC;AAEF;;;;;;;GAOG;AACH,qBAAa,YAAa,SAAQ,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC;IAChE,OAAO,CAAC,MAAM,CAAoB;IAElC,iBAAiB;IAMjB,oBAAoB;IAMpB,MAAM;IAyBN,OAAO,CAAC,YAAY,CAInB;CACJ;AAED,eAAe,YAAY,CAAC","file":"resize-sensor.d.ts","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\n\nexport type ResizeSensorProps = {\n    /**\n     * Callback на изменение размера родителя\n     */\n    onResize?: () => void;\n};\n\n/**\n * Компонент позволяющий слушать изменения размера родительского элемента.\n * Для использования разместите его в элементе об изменении размера, которого\n * вы хотите знать и добавьте внешний обработчик `onResize`.\n *\n * Важно! Элемент, размер которого вы хотите измерять, должен обладать\n * css свойством `position: relative;`.\n */\nexport class ResizeSensor extends React.Component<ResizeSensorProps> {\n    private iframe: HTMLIFrameElement;\n\n    componentDidMount() {\n        if (this.iframe.contentWindow) {\n            this.iframe.contentWindow.addEventListener('resize', this.handleResize);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.iframe.contentWindow) {\n            this.iframe.contentWindow.removeEventListener('resize', this.handleResize);\n        }\n    }\n\n    render() {\n        const iframeStyle = {\n            position: 'absolute' as const,\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'transparent',\n            border: 'none',\n            zIndex: -1,\n        };\n\n        /* eslint-disable jsx-a11y/iframe-has-title */\n        return (\n            <iframe\n                ref={ (iframe) => {\n                    this.iframe = iframe;\n                } }\n                style={ iframeStyle }\n                tabIndex={ -1 }\n            />\n        );\n        /* eslint-enable jsx-a11y/iframe-has-title */\n    }\n\n    private handleResize = () => {\n        if (this.props.onResize) {\n            this.props.onResize();\n        }\n    }\n}\n\nexport default ResizeSensor;\n"]}