"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var bem_react_classname_1 = require("bem-react-classname");
var cn_1 = require("../cn");
var arrow_down_1 = __importDefault(require("../icon/ui/arrow-down"));
var arrow_up_1 = __importDefault(require("../icon/ui/arrow-up"));
var link_1 = __importDefault(require("../link/link"));
var resize_sensor_1 = require("../resize-sensor/resize-sensor");
/**
 * Компонент «подката» позволяет спрятать кусок текста за ссылку «Еще...».
 */
var Collapse = /** @class */ (function (_super) {
    __extends(Collapse, _super);
    function Collapse() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.cn = bem_react_classname_1.createCn('collapse');
        _this.state = {
            isExpanded: false,
        };
        _this.handleExpandedChange = function () {
            // eslint-disable-next-line react/no-access-state-in-setstate
            var newExpandedValue = _this.props.isExpanded === undefined ? !_this.state.isExpanded : !_this.props.isExpanded;
            _this.setState({
                isExpanded: newExpandedValue,
            });
            if (_this.props.onExpandedChange) {
                _this.props.onExpandedChange(newExpandedValue);
            }
        };
        _this.updateContentHeight = function () {
            var expanded = _this.props.isExpanded === undefined ? _this.state.isExpanded : _this.props.isExpanded;
            var contentHeight;
            if (expanded) {
                contentHeight = _this.contentCase.offsetHeight;
            }
            else {
                contentHeight = 0;
            }
            if (_this.content) {
                _this.content.style.height = contentHeight + "px";
            }
        };
        return _this;
    }
    Collapse.prototype.componentDidMount = function () {
        this.updateContentHeight();
    };
    Collapse.prototype.componentDidUpdate = function () {
        this.updateContentHeight();
    };
    Collapse.prototype.render = function () {
        var _this = this;
        var ToggledIcon;
        var expanded = this.props.isExpanded === undefined ? this.state.isExpanded : this.props.isExpanded;
        switch (expanded) {
            case true:
                ToggledIcon = arrow_up_1.default;
                break;
            case false:
                ToggledIcon = arrow_down_1.default;
                break;
        }
        return (react_1.default.createElement("div", { className: this.cn({
                expanded: expanded,
            }), id: this.props.id, "data-test-id": this.props['data-test-id'] },
            react_1.default.createElement("div", { ref: function (content) {
                    _this.content = content;
                }, className: this.cn('content') },
                react_1.default.createElement("div", { ref: function (contentCase) {
                        _this.contentCase = contentCase;
                    } }, this.props.children),
                react_1.default.createElement(resize_sensor_1.ResizeSensor, { onResize: this.updateContentHeight })),
            react_1.default.createElement(link_1.default, { className: this.cn('link'), pseudo: true, icon: react_1.default.createElement(ToggledIcon, { size: "s" }), iconPosition: "right", onClick: this.handleExpandedChange, text: expanded
                    ? this.props.expandedLabel
                    : this.props.collapsedLabel })));
    };
    Collapse.defaultProps = {
        expandedLabel: 'Collapse',
        collapsedLabel: 'Expand',
    };
    return Collapse;
}(react_1.default.PureComponent));
exports.Collapse = Collapse;
exports.default = cn_1.withTheme(Collapse);

//# sourceMappingURL=collapse.js.map
