{"version":3,"sources":["radio/radio.tsx"],"names":[],"mappings":";AAAA;;8DAE8D;;;;;;;;;;;;;;;;;;AAE9D,gDAA0B;AAC1B,2DAA+C;AAC/C,4BAAkC;AAElC,wEAAiD;AACjD,+DAAwC;AACxC,gCAA+C;AAoH/C;;GAEG;AACH;IAA2B,yBAA2C;IAAtE;QAAA,qEAsNC;QArNa,QAAE,GAAG,8BAAQ,CAAC,OAAO,CAAC,CAAC;QAOjC,WAAK,GAAe;YAChB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,KAAK;SACjB,CAAC;QAyGM,6BAAuB,GAAG,UAAC,KAAK;YACpC,KAAK,CAAC,eAAe,EAAE,CAAC;QAC5B,CAAC,CAAC;QAEM,kBAAY,GAAG,UAAC,KAAK;YACzB,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACtB,6DAA6D;gBAC7D,IAAM,gBAAgB,GAAG,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAEvG,KAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;gBAE7C,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACrB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;iBAClE;aACJ;QACL,CAAC,CAAC;QAEM,iBAAW,GAAG,UAAC,KAAK;YACxB,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACtB,KAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;aACpC;YAED,IAAI,KAAI,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC9B,6CAA6C;gBAC7C,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aACzC;YAED,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACpB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC7B;QACL,CAAC,CAAC;QAEM,mBAAa,GAAG,cAAM,OAAA,YAAY,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAjC,CAAiC,CAAC,EAArD,CAAqD,CAAC;QAE5E,gBAAU,GAAG,UAAC,KAAK;YACvB,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACtB,KAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;aACrC;YAED,IAAI,KAAI,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC9B,6CAA6C;gBAC7C,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aACzC;YAED,IAAI,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACnB,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC5B;QACL,CAAC,CAAC;QAEM,sBAAgB,GAAG,UAAC,KAAK;YAC7B,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACtB,KAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;aACpC;YAED,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE;gBACzB,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAClC;QACL,CAAC,CAAC;QAEM,sBAAgB,GAAG,UAAC,KAAK;YAC7B,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACtB,KAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;aACrC;YAED,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE;gBACzB,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAClC;QACL,CAAC,CAAC;;IA8BN,CAAC;IApMG,sBAAM,GAAN;QAAA,iBAkCC;QAjCG,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAE3F,OAAO;QACH,2EAA2E;QAC3E,yCACI,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC;gBAChB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7B,OAAO,SAAA;gBACP,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC3B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC3B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC3B,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;aAChE,CAAC,EACF,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EACvB,QAAQ,EAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC9B,OAAO,EAAG,IAAI,CAAC,WAAW,EAC1B,MAAM,EAAG,IAAI,CAAC,UAAU,EACxB,YAAY,EAAG,IAAI,CAAC,gBAAgB,EACpC,YAAY,EAAG,IAAI,CAAC,gBAAgB,EACpC,WAAW,EAAG,IAAI,CAAC,aAAa,EAChC,SAAS,EAAG,IAAI,CAAC,aAAa,EAC9B,GAAG,EAAG,UAAC,KAAK;gBACR,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,CAAC,kBACc,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAEvC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ;YAC1B,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,oBAAS,CAAC;YAC5C,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CACjC,CACX,CAAC;IACN,CAAC;IAED,iCAAiB,GAAjB,UAAkB,OAAO;QAAzB,iBA0BC;QAzBG,OAAO;YACH,wCAAM,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAG,GAAG,EAAG,CAAC;gBACtC,yCACI,OAAO,EAAG,OAAO,EACjB,QAAQ,EAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC9B,IAAI,EAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EACtB,EAAE,EAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAClB,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EACxB,YAAY,EAAC,KAAK,EAClB,QAAQ,EAAG,CAAC,CAAC,EACb,IAAI,EAAC,OAAO,EACZ,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAC9B,GAAG,EAAG,UAAC,OAAO;wBACV,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBAC3B,CAAC,EACD,OAAO,EAAG,IAAI,CAAC,uBAAuB,EACtC,QAAQ,EAAG,IAAI,CAAC,YAAY,GAC9B,CACC;YACP,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CACf,wCAAM,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAG,IAAI,EAAC,cAAc,EAAC,GAAG,EAAG,CAAC,IACzD,IAAI,CAAC,KAAK,CAAC,IAAI,CACd,CACV;SACJ,CAAC;IACN,CAAC;IAED,iCAAiB,GAAjB,UAAkB,OAAO,EAAE,SAAS;QAApC,iBAiCC;QAhCG,OAAO,CACH;YACI,8BAAC,SAAS,IACN,SAAS,EAAC,OAAO,EACjB,OAAO,EAAG,OAAO,EACjB,QAAQ,EAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC9B,IAAI,EAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EACtB,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EACxB,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAC5B,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAC5B,QAAQ,EAAG,CAAC,CAAC,EACb,OAAO,EAAG,IAAI,CAAC,YAAY,IAEzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAChC;YACZ,yCACI,OAAO,EAAG,OAAO,EACjB,QAAQ,EAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC9B,IAAI,EAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EACtB,EAAE,EAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAClB,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EACxB,YAAY,EAAC,KAAK,EAClB,QAAQ,EAAG,CAAC,CAAC,EACb,IAAI,EAAC,OAAO,EACZ,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAC9B,QAAQ,EAAG,IAAI,CAAC,YAAY,EAC5B,GAAG,EAAG,UAAC,OAAO;oBACV,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC3B,CAAC,GACH,CACA,CACT,CAAC;IACN,CAAC;IAuED;;OAEG;IACI,qBAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,kDAAkD;IAC3C,oBAAI,GAAX;QACI,IAAI,QAAQ,CAAC,aAAa,EAAE;YACvB,QAAQ,CAAC,aAA6B,CAAC,IAAI,EAAE,CAAC;SAClD;IACL,CAAC;IAED;;OAEG;IACI,wBAAQ,GAAf;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,CAAC;QAEvD,mBAAQ,CAAC;YACL,8CAA8C;YAC9C,OAAO,EAAE,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,GAAG,2BAAoB;SACvE,CAAC,CAAC;IACP,CAAC;IAlNM,kBAAY,GAAwB;QACvC,IAAI,EAAE,GAAG;QACT,QAAQ,EAAE,CAAC;KACd,CAAC;IAgNN,YAAC;CAtND,AAsNC,CAtN0B,eAAK,CAAC,aAAa,GAsN7C;AAtNY,sBAAK;AAwNlB,kBAAe,cAAS,CAAoB,KAAK,CAAC,CAAC","file":"radio.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\n\nimport TagButton from '../tag-button/tag-button';\nimport scrollTo from '../lib/scroll-to';\nimport { SCROLL_TO_CORRECTION } from '../vars';\n\nexport type RadioProps = ({\n    /**\n     * Тип\n     */\n    type?: 'normal';\n    /**\n     * Размер компонента\n     */\n    size?: 'm' | 'l';\n} | {\n    /**\n     * Тип\n     */\n    type?: 'button';\n    /**\n     * Размер компонента\n     */\n    size?: 's'| 'm' | 'l' | 'xl';\n}) & {\n\n    /**\n     * Управление состоянием вкл/выкл компонента\n     */\n    checked?: boolean;\n\n    /**\n     * Управление возможностью изменения состояние 'checked' компонента\n     */\n    disabled?: boolean;\n\n    /**\n     * Уникальный идентификатор блока\n     */\n    id?: string;\n\n    /**\n     * Уникальное имя блока\n     */\n    name?: string;\n\n    /**\n     * Значение радио-кнопки, которое будет отправлено на сервер, если она выбрана\n     */\n    value?: string;\n\n    /**\n     * Текст подписи к радио-кнопке\n     */\n    text?: React.ReactNode;\n\n    /**\n     * Управление шириной кнопки для типа 'button'. При значении 'available'\n     * растягивает кнопку на ширину родителя\n     */\n    width?: 'default' | 'available';\n\n    /**\n     * Отображение в состоянии ошибки\n     */\n    error?: boolean;\n\n    /**\n     * Последовательность перехода между контролами при нажатии на Tab\n     */\n    tabIndex?: number;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Обработчик изменения значения 'checked' компонента, принимает на вход isChecked и value компонента\n     */\n    onChange?: (value?: string, isChecked?: boolean, event?: React.ChangeEvent<any>) => void;\n\n    /**\n     * Обработчик фокуса комнонента\n     */\n    onFocus?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик снятия фокуса с компонента\n     */\n    onBlur?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик события наведения курсора на радио-кнопку\n     */\n    onMouseEnter?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события снятия курсора с радио-кнопки\n     */\n    onMouseLeave?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\ntype RadioState = {\n    focused: boolean;\n    hovered: boolean;\n    checked: boolean;\n    pressed?: boolean;\n}\n\n/**\n * Компонент радио-кнопки.\n */\nexport class Radio extends React.PureComponent<RadioProps, RadioState> {\n    protected cn = createCn('radio');\n\n    static defaultProps: Partial<RadioProps> = {\n        size: 'm',\n        tabIndex: 0,\n    };\n\n    state: RadioState = {\n        focused: false,\n        hovered: false,\n        checked: false,\n    };\n\n    private label;\n\n    private control;\n\n    render() {\n        const checked = this.props.checked === undefined ? this.state.checked : this.props.checked;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n            <label\n                className={ this.cn({\n                    size: this.props.size,\n                    disabled: this.props.disabled,\n                    checked,\n                    focused: this.state.focused,\n                    hovered: this.state.hovered,\n                    pressed: this.state.pressed,\n                    invalid: !!this.props.error,\n                    width: this.props.type === 'button' ? this.props.width : null,\n                }) }\n                htmlFor={ this.props.id }\n                tabIndex={ this.props.tabIndex }\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n                onMouseEnter={ this.handleMouseEnter }\n                onMouseLeave={ this.handleMouseLeave }\n                onMouseDown={ this.handleUnfocus }\n                onMouseUp={ this.handleUnfocus }\n                ref={ (label) => {\n                    this.label = label;\n                } }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                { this.props.type === 'button'\n                    ? this.renderButtonRadio(checked, TagButton)\n                    : this.renderNormalRadio(checked) }\n            </label>\n        );\n    }\n\n    renderNormalRadio(checked) {\n        return [\n            <span className={ this.cn('box') } key={ 0 }>\n                <input\n                    checked={ checked }\n                    disabled={ this.props.disabled }\n                    name={ this.props.name }\n                    id={ this.props.id }\n                    value={ this.props.value }\n                    autoComplete=\"off\"\n                    tabIndex={ -1 }\n                    type=\"radio\"\n                    className={ this.cn('control') }\n                    ref={ (control) => {\n                        this.control = control;\n                    } }\n                    onClick={ this.handleInputControlClick }\n                    onChange={ this.handleChange }\n                />\n            </span>,\n            this.props.text && (\n                <span className={ this.cn('text') } role=\"presentation\" key={ 1 }>\n                    { this.props.text }\n                </span>\n            ),\n        ];\n    }\n\n    renderButtonRadio(checked, TagButton) {\n        return (\n            <div>\n                <TagButton\n                    togglable=\"check\"\n                    checked={ checked }\n                    disabled={ this.props.disabled }\n                    size={ this.props.size }\n                    width={ this.props.width }\n                    focused={ this.state.focused }\n                    hovered={ this.state.hovered }\n                    tabIndex={ -1 }\n                    onClick={ this.handleChange }\n                >\n                    { this.props.text ? this.props.text : '' }\n                </TagButton>\n                <input\n                    checked={ checked }\n                    disabled={ this.props.disabled }\n                    name={ this.props.name }\n                    id={ this.props.id }\n                    value={ this.props.value }\n                    autoComplete=\"off\"\n                    tabIndex={ -1 }\n                    type=\"radio\"\n                    className={ this.cn('control') }\n                    onChange={ this.handleChange }\n                    ref={ (control) => {\n                        this.control = control;\n                    } }\n                />\n            </div>\n        );\n    }\n\n    private handleInputControlClick = (event) => {\n        event.stopPropagation();\n    };\n\n    private handleChange = (event) => {\n        if (!this.props.disabled) {\n            // eslint-disable-next-line react/no-access-state-in-setstate\n            const nextCheckedValue = !(this.props.checked === undefined ? this.state.checked : this.props.checked);\n\n            this.setState({ checked: nextCheckedValue });\n\n            if (this.props.onChange) {\n                this.props.onChange(this.props.value, nextCheckedValue, event);\n            }\n        }\n    };\n\n    private handleFocus = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ focused: true });\n        }\n\n        if (this.props.type !== 'button') {\n            // eslint-disable-next-line no-param-reassign\n            event.target.value = this.props.value;\n        }\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    };\n\n    private handleUnfocus = () => setImmediate(() => this.setState({ focused: false }));\n\n    private handleBlur = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ focused: false });\n        }\n\n        if (this.props.type !== 'button') {\n            // eslint-disable-next-line no-param-reassign\n            event.target.value = this.props.value;\n        }\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    };\n\n    private handleMouseEnter = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ hovered: true });\n        }\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    };\n\n    private handleMouseLeave = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ hovered: false });\n        }\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    };\n\n    /**\n     * Устанавливает фокус на радио-кнопку.\n     */\n    public focus() {\n        this.control.focus();\n    }\n\n    /**\n     * Убирает фокус с радио-кнопки.\n     */\n    // eslint-disable-next-line class-methods-use-this\n    public blur() {\n        if (document.activeElement) {\n            (document.activeElement as HTMLElement).blur();\n        }\n    }\n\n    /**\n     * Скроллит страницу до радио-кнопки.\n     */\n    public scrollTo() {\n        const elementRect = this.label.getBoundingClientRect();\n\n        scrollTo({\n            // eslint-disable-next-line no-mixed-operators\n            targetY: elementRect.top + window.pageYOffset - SCROLL_TO_CORRECTION,\n        });\n    }\n}\n\nexport default withTheme<RadioProps, Radio>(Radio);\n"]}