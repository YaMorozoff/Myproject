interface ClassDecorator {
    <TFunction extends Function>(target: TFunction): TFunction | void;
}
/**
 * Функции проверки равенства двух переменных.
 *
 * @param {*} valueA Первое значение
 * @param {*} valueB Второе значение
 * @param {Boolean} [deep=false] Запускать ли глубокую проверку равенства
 * @returns {Boolean}
 */
export declare function isEqual(valueA: unknown, valueB: unknown, deep?: boolean): boolean;
/**
 * Декоратор для улучшения производительности React компонентов. Работает за счет реализации метода
 * [shouldComponentUpdate](https://facebook.github.io/react/docs/advanced-performance.html#avoiding-reconciling-the-dom)
 *
 * У декоратора есть два режима работы - глубокая и "поверхностная" проверка. В случае, если все props и state
 * компонента состоит только из примитивных значений (`number`, `string`, `null`, `undefined`) стоит использовать
 * поверхностную проверку, которая будет проверять простое равенство значений в `props` и `state`.

 * В случае, если props или state компонентов имеют сложную структуру (массивы, объекты) необходимо использовать
 * глубокую проверку.
 *
 * @param useDeep Использовать глубокую проверку равенства
 * @deprecated since version 17.0.0
 */
export default function performance(useDeep?: boolean): ClassDecorator;
export {};
