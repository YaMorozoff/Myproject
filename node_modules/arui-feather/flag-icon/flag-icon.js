"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable max-len */
var react_1 = __importDefault(require("react"));
var bem_react_classname_1 = require("bem-react-classname");
var cn_1 = require("../cn");
/**
 * Компонент флага в виде иконки.
 */
var FlagIcon = /** @class */ (function (_super) {
    __extends(FlagIcon, _super);
    function FlagIcon() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.cn = bem_react_classname_1.createCn('flag-icon');
        return _this;
    }
    FlagIcon.prototype.render = function () {
        return (react_1.default.createElement("span", { className: this.cn({
                country: this.props.country,
                flat: this.props.isFlat,
                mode: this.props.mode,
                size: this.props.size,
            }), "data-test-id": this.props['data-test-id'] }));
    };
    FlagIcon.defaultProps = {
        isFlat: false,
        mode: 'chunk',
        size: 'm',
    };
    return FlagIcon;
}(react_1.default.PureComponent));
exports.FlagIcon = FlagIcon;
exports.default = cn_1.withTheme(FlagIcon);

//# sourceMappingURL=flag-icon.js.map
