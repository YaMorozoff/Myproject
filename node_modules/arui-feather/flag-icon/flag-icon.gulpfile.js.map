{"version":3,"sources":["flag-icon/flag-icon.gulpfile.js"],"names":["buffer","require","del","fs","gm","gulp","hbs","imagemin","rename","merge","path","spritesmith","SIZES","DIMENSIONS","s","m","l","xl","COMPONENT_DIR","SPRITES_IMG_DIR","CHUNKS_IMG_DIR","getImageHeightBySize","size","ratio","width","height","optimizeGmFile","file","noProfile","quality","colors","task","forEach","cssChunksTemplate","compile","readFileSync","toString","cssChunksData","chunks","src","pipe","basename","toLowerCase","resize","done","error","dimensions","east","south","dest","url","source","split","name","extname","push","on","retinaChunks","map","item","replace","writeFileSync","spriteData","cssName","imgName","retinaImgName","retinaSrcFilter","cssTemplate","cssOpts","cssVarMap","sprite","selector","source_image","indexOf","imageStream","img","optipng","optimizationLevel","cssStream","css","concat"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// @ts-nocheck\n\n/* eslint import/no-extraneous-dependencies: [2, {\"devDependencies\": true}] */\n\nconst buffer = require('vinyl-buffer');\nconst del = require('del');\nconst fs = require('fs');\nconst gm = require('gulp-gm');\nconst gulp = require('gulp');\nconst hbs = require('handlebars');\nconst imagemin = require('gulp-imagemin');\nconst rename = require('gulp-rename');\nconst merge = require('merge-stream');\nconst path = require('path');\nconst spritesmith = require('gulp.spritesmith');\n\nconst SIZES = ['s', 'm', 'l', 'xl'];\nconst DIMENSIONS = {\n    s: [15, 12],\n    m: [20, 15],\n    l: [22, 17],\n    xl: [24, 20],\n};\n\nconst COMPONENT_DIR = './';\nconst SPRITES_IMG_DIR = './images/sprites';\nconst CHUNKS_IMG_DIR = './images/chunks';\n\nfunction getImageHeightBySize(size, ratio = 1) {\n    return {\n        width: DIMENSIONS[size][0] * ratio,\n        height: DIMENSIONS[size][1] * ratio,\n    };\n}\n\nfunction optimizeGmFile(file) {\n    return file.noProfile().quality(60).colors(24);\n}\n\ngulp.task('clean:flag-icon', () => del(\n    [`${COMPONENT_DIR}/flag-icon_size_*.css`, SPRITES_IMG_DIR, CHUNKS_IMG_DIR],\n));\n\nSIZES.forEach((size) => {\n    const cssChunksTemplate = hbs.compile(fs.readFileSync(`${COMPONENT_DIR}/flag-icon.chunks.css.hbs`).toString());\n    const cssChunksData = { size, chunks: [] };\n\n    // Process 2-char country code files only (ignore subregions)\n    gulp.task(`flag-icon:resize-${size}`, () => gulp.src('../../node_modules/region-flags/png/??.png')\n        .pipe(rename((path) => {\n            // eslint-disable-next-line no-param-reassign\n            path.basename = path.basename.toLowerCase();\n        }))\n        // You need graphicsmagick installed on your system:\n        // https://github.com/scalableminds/gulp-gm#graphicsmagick-or-imagemagick\n        .pipe(gm(((file) => file.resize(\n            getImageHeightBySize(size, 2).width,\n            getImageHeightBySize(size, 2).height,\n        ))))\n        .pipe(gm((file, done) => {\n            // We need to run through new dimensions & resize with even numbers if it has odd ones\n            // https://github.com/twolfson/gulp.spritesmith/issues/57\n            // https://github.com/katapad/evenizer\n            file.size((error, dimensions) => {\n                const { width, height } = dimensions;\n\n                if (error) {\n                    throw error;\n                }\n\n                const east = width % 2 === 1 ? 1 : 0;\n                const south = height % 2 === 1 ? 1 : 0;\n\n                if (east || south) {\n                    done(null, optimizeGmFile(file.resize(\n                        width + east,\n                        height + south,\n                        '!', // Override aspect ratio\n                    )));\n                } else {\n                    done(null, optimizeGmFile(file));\n                }\n            });\n        }))\n        .pipe(gulp.dest(`${CHUNKS_IMG_DIR}/${size}/2x`))\n        .pipe(gm((file, done) => {\n            file.size((error, dimensions) => {\n                if (error) {\n                    throw error;\n                }\n\n                done(null, optimizeGmFile(file.resize(\n                    dimensions.width / 2,\n                    dimensions.height / 2,\n                )));\n            });\n        }))\n        // We need to save files on disk cause of spritesmith's retinaSrcFilter inability to read streams\n        .pipe(gulp.dest(`${CHUNKS_IMG_DIR}/${size}/1x`)));\n\n    gulp.task(`flag-icon:chunks-${size}`, [`flag-icon:resize-${size}`],\n        () => gulp.src(`${CHUNKS_IMG_DIR}/${size}/1x/*.png`)\n            .pipe(gm((file, done) => {\n                file.size((error, dimensions) => {\n                    if (error) {\n                        throw error;\n                    }\n\n                    const url = file.source.split(/\\/1x\\//g);\n                    const name = path.basename(file.source, path.extname(file.source));\n\n                    cssChunksData.chunks.push({\n                        width: `${dimensions.width}px`,\n                        height: `${dimensions.height}px`,\n                        name,\n                        url: `${CHUNKS_IMG_DIR}/${size}/1x/${url[1]}`,\n                    });\n\n                    done(null, file);\n                });\n            }))\n            .on('end', () => {\n                cssChunksData.retinaChunks = cssChunksData.chunks.map((item) => ({\n                    name: item.name,\n                    url: item.url.replace('/1x/', '/2x/'),\n                }));\n\n                fs.writeFileSync(\n                    `${COMPONENT_DIR}/flag-icon_size_${size}.chunks.css`,\n                    cssChunksTemplate(cssChunksData),\n                );\n            }));\n\n    gulp.task(`flag-icon:sprite-${size}`, [`flag-icon:resize-${size}`], () => {\n        const spriteData = gulp.src(`${CHUNKS_IMG_DIR}/${size}/**/*.png`)\n            .pipe(spritesmith({\n                cssName: `flag-icon_size_${size}.sprite.css`,\n                imgName: `flag-icon_size_${size}@1x.png`,\n                retinaImgName: `flag-icon_size_${size}@2x.png`,\n                retinaSrcFilter: [`${CHUNKS_IMG_DIR}/${size}/2x/*.png`],\n                cssTemplate: `${COMPONENT_DIR}/flag-icon.sprite.css.hbs`,\n                cssOpts: { size },\n                cssVarMap: (sprite) => {\n                    // eslint-disable-next-line no-param-reassign\n                    sprite.selector = `.flag-icon_country_${sprite.name}`;\n\n                    // https://github.com/twolfson/gulp.spritesmith/issues/124\n                    if (sprite.source_image.indexOf('2x') !== -1) {\n                        // eslint-disable-next-line no-param-reassign\n                        sprite.name += '-2x';\n                    }\n                },\n            }));\n\n        const imageStream = spriteData.img\n            .pipe(buffer())\n            .pipe(imagemin([\n                imagemin.optipng({ optimizationLevel: 7 }),\n            ]))\n            .pipe(gulp.dest(SPRITES_IMG_DIR));\n\n        const cssStream = spriteData.css\n            .pipe(gulp.dest(COMPONENT_DIR));\n\n        return merge(imageStream, cssStream);\n    });\n});\n\ngulp.task('default', ['clean:flag-icon']\n    .concat(SIZES.map((size) => `flag-icon:chunks-${size}`))\n    .concat(SIZES.map((size) => `flag-icon:sprite-${size}`)));\n"],"file":"flag-icon.gulpfile.js"}