import React from 'react';
import { Radio } from '../radio/radio';
export declare type RadioGroupProps = {
    /**
     * Тип группы кнопок
     */
    type?: 'normal' | 'button' | 'line';
    /**
     * Значение выбранной радио-кнопки
     */
    value?: string;
    /**
     * Отображение попапа с ошибкой в момент когда фокус находится на компоненте
     */
    error?: React.ReactNode;
    /**
     * Размеры pub и sub
     */
    size?: 's' | 'm' | 'l' | 'xl';
    /**
     * Управление шириной группы кнопок для типа 'button'. При значении
'available' растягивает группу на ширину родителя
     */
    width?: 'default' | 'available';
    /**
     * Уникальное имя блока
     */
    name?: string;
    /**
     * Управление возможностью изменения состояния 'checked' дочерних компонентов `Radio`
     */
    disabled?: boolean;
    /**
     * Дочерние элементы `RadioGroup`, как правило, компоненты `Radio`
     */
    children?: React.ReactNode;
    /**
     * Тема компонента
     */
    theme?: 'alfa-on-color' | 'alfa-on-white';
    /**
     * Дополнительный класс
     */
    className?: string;
    /**
     * Лейбл для группы
     */
    label?: React.ReactNode;
    /**
     * Подсказка под полем
     */
    hint?: React.ReactNode;
    /**
     * Обработчик фокуса радиогруппы
     */
    onFocus?: (event?: React.FocusEvent<any>) => void;
    /**
     * Обработчик снятия фокуса с радиогруппы
     */
    onBlur?: (event?: React.FocusEvent<any>) => void;
    /**
     * Обработчик изменения значения 'checked' одного из дочерних радио-кнопок
     */
    onChange?: (value?: string) => void;
    /**
     * Идентификатор для систем автоматизированного тестирования
     */
    'data-test-id'?: string;
};
/**
 * Компонент группы радио-кнопок.
 */
export declare class RadioGroup extends React.PureComponent<RadioGroupProps> {
    protected cn: (this: void | {
        props?: Record<string, unknown>;
    }, elementNameOrMods?: string | {
        [key: string]: string | number | boolean;
    }, mods?: {
        [key: string]: string | number | boolean;
    }) => string;
    static defaultProps: Partial<RadioGroupProps>;
    state: {
        value: string;
    };
    radios: Radio[];
    render(): JSX.Element;
    private handleRadioChange;
    private handleFocus;
    private handleBlur;
    /**
     * Устанавливает фокус на первую радиокнопку в группе.
     */
    focus(): void;
    /**
     * Убирает фокус с группы радио-кнопок.
     */
    blur(): void;
}
declare const _default: React.ForwardRefExoticComponent<RadioGroupProps & React.RefAttributes<RadioGroup>> & RadioGroup;
export default _default;
