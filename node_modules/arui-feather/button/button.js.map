{"version":3,"sources":["button/button.tsx"],"names":[],"mappings":"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","file":"button.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\nimport keyboardCode from '../lib/keyboard-code';\n\nexport type ButtonProps = {\n\n    /**\n     * Текст кнопки\n     */\n    text?: React.ReactNode;\n\n    /**\n     * Иконка кнопки\n     */\n    icon?: React.ReactNode;\n\n    /**\n     * Список произвольных элементов в левом слоте\n     */\n    rightAddons?: React.ReactNode;\n\n    /**\n     * Список произвольных элементов в правом слоте\n     */\n    leftAddons?: React.ReactNode;\n\n    /**\n     * Тип кнопки\n     */\n    view?: 'default' | 'action' | 'extra' | 'rounded';\n\n    /**\n     * Поведение кнопки\n     */\n    type?: 'button' | 'reset' | 'submit';\n\n    /**\n     * HTML элемент, которым будет компонент в DOM\n     */\n    tag?: 'button' | 'span';\n\n    /**\n     * Управление шириной кнопки. При значении 'available' растягивает кнопку на ширину родителя\n     */\n    width?: 'default' | 'available';\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Управление возможности взаимодействия с компонентом\n     */\n    disabled?: boolean;\n\n    /**\n     * Отображение кнопки в состоянии фокуса\n     */\n    focused?: boolean;\n\n    /**\n     * Псевдо представление кнопки\n     */\n    pseudo?: boolean;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Отключает валидацию полей формы, у которых есть атрибут pattern\n     */\n    formNoValidate?: boolean;\n\n    /**\n     * Имя компонента в DOM\n     */\n    name?: string;\n\n    /**\n     * Текст всплывающей подсказки\n     */\n    title?: string;\n\n    /**\n     * Последовательность перехода между контролами при нажатии на Tab\n     */\n    tabIndex?: number;\n\n    /**\n     * Тип переключателя\n     */\n    togglable?: 'check' | 'radio';\n\n    /**\n     * Отображение кнопки в отмеченном (зажатом) состоянии\n     */\n    checked?: boolean;\n\n    /**\n     * Дочерние элементы `Button`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Обработчик клика по кнопке\n     */\n    onClick?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик фокуса кнопки\n     */\n    onFocus?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик снятия фокуса кнопки\n     */\n    onBlur?: (event?: React.FocusEvent<any>) => void;\n\n    /**\n     * Обработчик события наведения курсора на кнопку\n     */\n    onMouseEnter?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события снятия курсора с кнопки\n     */\n    onMouseLeave?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события нажатия кнопки мыши в момент\n     */\n    onMouseDown?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события отжатия кнопки мыши в момент\n     */\n    onMouseUp?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события отведения курсора с кнопки\n     */\n    onMouseOut?: (event?: React.MouseEvent<any>) => void;\n\n    /**\n     * Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте\n     */\n    onKeyDown?: (event?: React.KeyboardEvent<any>) => void;\n\n    /**\n     * Обработчик события отжатия на клавишу клавиатуры в момент, когда фокус находится на компоненте\n     */\n    onKeyUp?: (event?: React.KeyboardEvent<any>) => void;\n\n};\n\ntype ButtonState = {\n    focused: boolean;\n    hovered: boolean;\n    pressed: boolean;\n}\n\n/**\n * Компонент кнопки (да, она нажимается!).\n */\nexport class Button extends React.PureComponent<ButtonProps, ButtonState> {\n    protected cn = createCn('button');\n\n    static defaultProps: Partial<ButtonProps> = {\n        type: 'button',\n        tag: 'button',\n        size: 'm',\n        formNoValidate: false,\n    };\n\n    static getDerivedStateFromProps(nextProps: ButtonProps): Partial<ButtonState> | null {\n        if (nextProps.disabled) {\n            return {\n                hovered: false,\n                focused: false,\n            };\n        }\n\n        return null;\n    }\n\n    state = {\n        focused: false,\n        hovered: false,\n        pressed: false,\n    };\n\n    private control: HTMLButtonElement | HTMLSpanElement;\n\n    render() {\n        const isButton = this.props.tag !== 'span';\n\n        const buttonProps = {\n            ref: (control) => {\n                this.control = control;\n            },\n            role: 'button',\n            id: this.props.id,\n            name: this.props.name,\n            type: this.props.type,\n            title: this.props.title,\n            tabIndex: this.props.disabled ? -1 : this.props.tabIndex,\n            disabled: this.props.disabled,\n            formNoValidate: isButton ? this.props.formNoValidate : null,\n            className: this.cn({\n                disabled: this.props.disabled,\n                pseudo: this.props.pseudo,\n                view: this.props.view,\n                size: this.props.size,\n                width: this.props.width,\n                focused: this.props.focused === undefined ? this.state.focused : this.props.focused,\n                hovered: this.state.hovered,\n                pressed: this.state.pressed,\n                togglable: this.props.togglable,\n                checked: this.props.checked,\n            }),\n            onClick: this.handleClick,\n            onFocus: this.handleFocus,\n            onBlur: this.handleBlur,\n            onMouseEnter: this.handleMouseEnter,\n            onMouseLeave: this.handleMouseLeave,\n            onMouseDown: this.handleMouseDown,\n            onMouseUp: this.handleMouseUp,\n            onMouseOut: this.handleMouseOut,\n            onKeyDown: this.handleKeyDown,\n            onKeyUp: this.handleKeyUp,\n            'data-test-id': this.props['data-test-id'],\n        };\n\n        const buttonContent = [\n            this.props.leftAddons && (\n                <span key=\"left-addons\" className={ this.cn('addon') }>\n                    { this.props.leftAddons }\n                </span>\n            ),\n            (this.props.children || this.props.text || this.props.icon) && (\n                <span key=\"content\" className={ this.cn('content') }>\n                    { this.props.icon && (\n                        <span key=\"icon\" className={ this.cn('icon') }>\n                            { this.props.icon }\n                        </span>\n                    ) }\n                    { (this.props.children || this.props.text) && (\n                        <span key=\"text\" className={ this.cn('text') }>\n                            { this.props.children || this.props.text }\n                        </span>\n                    ) }\n                </span>\n            ),\n            this.props.rightAddons && (\n                <span key=\"right-addons\" className={ this.cn('addon') }>\n                    { this.props.rightAddons }\n                </span>\n            ),\n        ];\n\n        return isButton ? (\n            // eslint-disable-next-line react/button-has-type\n            <button { ...buttonProps }>{ buttonContent }</button>\n        ) : (\n            <span { ...buttonProps }>{ buttonContent }</span>\n        );\n    }\n\n    private handleClick = (event) => {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    };\n\n    private handleFocus = (event) => {\n        if (this.state.pressed) {\n            return;\n        }\n\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    };\n\n    private handleBlur = (event) => {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    };\n\n    private handleMouseEnter = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ hovered: true });\n        }\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    };\n\n    private handleMouseLeave = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ hovered: false });\n        }\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    };\n\n    private handleMouseDown = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ pressed: true });\n        }\n\n        if (this.props.onMouseDown) {\n            this.props.onMouseDown(event);\n        }\n    };\n\n    private handleMouseUp = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ pressed: false });\n        }\n\n        if (this.props.onMouseUp) {\n            this.props.onMouseUp(event);\n        }\n    };\n\n    private handleMouseOut = (event) => {\n        if (!this.props.disabled) {\n            this.setState({ pressed: false });\n        }\n\n        if (this.props.onMouseOut) {\n            this.props.onMouseOut(event);\n        }\n    };\n\n    private handleKeyDown = (event) => {\n        if ((event.which === keyboardCode.ENTER || event.which === keyboardCode.SPACE) && !this.props.disabled) {\n            this.setState({ pressed: true });\n        }\n\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    };\n\n    private handleKeyUp = (event) => {\n        if ((event.which === keyboardCode.ENTER || event.which === keyboardCode.SPACE) && !this.props.disabled) {\n            this.setState({ pressed: false });\n        }\n\n        if (this.props.onKeyUp) {\n            this.props.onKeyUp(event);\n        }\n    };\n\n    /**\n     * Возвращает корневой `HTMLElement` компонента.\n     */\n    public getNode() {\n        return this.control;\n    }\n\n    /**\n     * Устанавливает фокус на поле ввода.\n     */\n    public focus() {\n        this.control.focus();\n    }\n\n    /**\n     * Убирает фокус с поля ввода.\n     */\n    // eslint-disable-next-line class-methods-use-this\n    public blur() {\n        if (document.activeElement) {\n            (document.activeElement as HTMLElement).blur();\n        }\n    }\n}\n\nexport default withTheme<ButtonProps, Button>(Button);\n"]}