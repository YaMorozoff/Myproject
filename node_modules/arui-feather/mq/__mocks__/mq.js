"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var isMatched = true;
var Mq = /** @class */ (function (_super) {
    __extends(Mq, _super);
    function Mq() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Mq.prototype.componentDidMount = function () {
        this.props.onMatchChange(isMatched);
    };
    Mq.prototype.render = function () {
        return isMatched ? this.props.children : false;
    };
    return Mq;
}(react_1.default.Component));
function setIsMatched(newIsMatched) {
    isMatched = newIsMatched;
}
exports.setIsMatched = setIsMatched;
exports.default = Mq;

//# sourceMappingURL=mq.js.map
