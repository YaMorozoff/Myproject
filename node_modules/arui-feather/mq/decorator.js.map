{"version":3,"sources":["mq/decorator.ts"],"names":[],"mappings":";AAAA;;8DAE8D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9D,cAAc;AAEd,gDAA0B;AAC1B,kDAAsE;AAUtE,SAAwB,WAAW,CAAC,KAAa,EAAE,QAAoB;IAApB,yBAAA,EAAA,oBAAoB;IACnE,OAAO,UAAU,SAA8B;QAC3C;YAAqB,2BAAqC;YAAnD;gBAAA,qEAiCN;gBAhCG,SAAG,GAA0B,IAAI,CAAC;gBAElC,WAAK,GAAG;oBACJ,OAAO,EAAE,KAAK;iBACjB,CAAC;gBAuBF,uBAAiB,GAAG,UAAC,GAAwB;oBACzC,KAAI,CAAC,QAAQ,CAAC;wBACV,OAAO,EAAE,GAAG,CAAC,OAAO;qBACvB,CAAC,CAAC;gBACP,CAAC,CAAA;;YACL,CAAC;YA1BG,mCAAiB,GAAjB;gBACI,IAAI,CAAC,GAAG,GAAG,2BAAa,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACjC,iDAAiD;gBACjD,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACjD,CAAC;YAED,sCAAoB,GAApB;gBACI,+BAAiB,CAAC,KAAK,CAAC,CAAC;gBACzB,oDAAoD;gBACpD,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAChD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YACpB,CAAC;YAED,wBAAM,GAAN;;gBACI,OAAO,eAAK,CAAC,aAAa,CAAC,SAAS,wBAC7B,IAAI,CAAC,KAAK,gBACZ,QAAQ,IAAG,IAAI,CAAC,KAAK,CAAC,OAAO,OAChC,CAAC;YACP,CAAC;YAOL,cAAC;QAAD,CAjCO,AAiCN,CAjCoB,eAAK,CAAC,SAAS,GAiClC;IACN,CAAC,CAAC;AACN,CAAC;AArCD,8BAqCC","file":"decorator.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// @ts-nocheck\n\nimport React from 'react';\nimport { getMatchMedia, releaseMatchMedia } from '../lib/match-media';\n\ninterface ClassDecorator {\n    <TFunction extends Function>(target: TFunction): TFunction | void;\n}\n\ntype MqDecoratorState = {\n    matched: boolean;\n}\n\nexport default function mqDecorator(query: string, propName = 'mqMatch'): ClassDecorator {\n    return function (Component: React.ComponentType) {\n        return class extends React.Component<{}, MqDecoratorState> {\n            mql: MediaQueryList | null = null;\n\n            state = {\n                matched: false,\n            };\n\n            componentDidMount() {\n                this.mql = getMatchMedia(query);\n                this.handleMatchChange(this.mql);\n                // TODO: depricated => change to addEventListener\n                this.mql.addListener(this.handleMatchChange);\n            }\n\n            componentWillUnmount() {\n                releaseMatchMedia(query);\n                // TODO: depricated => change to removeEventListener\n                this.mql.removeListener(this.handleMatchChange);\n                this.mql = null;\n            }\n\n            render() {\n                return React.createElement(Component, {\n                    ...this.props,\n                    [propName]: this.state.matched,\n                });\n            }\n\n            handleMatchChange = (mql: MediaQueryListEvent) => {\n                this.setState({\n                    matched: mql.matches,\n                });\n            }\n        };\n    };\n}\n"]}