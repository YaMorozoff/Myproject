{"version":3,"sources":["mq/mq.tsx"],"names":[],"mappings":";AAAA;;8DAE8D;;;;;;;;;;;;;;;;;;AAE9D,gDAA0B;AAC1B,kDAAsE;AACtE,iCAAqE;AAErE,IAAM,UAAU,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;AACjD,IAAM,cAAc,GAAG,UAAU,IAAI,CAAC,gCAAwB,EAAE,IAAI,wBAAgB,EAAE,CAAC,CAAC;AA6BxF;;;;;;GAMG;AACH;IAAiB,sBAAiC;IAAlD;QAAA,qEAgDC;QA/CG,WAAK,GAAG;YACJ,SAAS,EAAE,KAAK;SACnB,CAAC;QAEM,SAAG,GAA0B,IAAI,CAAC;QAsBlC,iBAAW,GAAG,UAAC,GAAyC;YAC5D,IAAI,SAAS,GAAG,IAAI,CAAC;YACrB,IAAI,SAAS,GAAG,IAAI,CAAC;YAErB,IAAI,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAClB,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;aAC3B;YACD,IAAI,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAClB,SAAS,GAAG,cAAc,CAAC;aAC9B;iBAAM,IAAI,KAAI,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK,EAAE;gBACnC,SAAS,GAAG,CAAC,cAAc,CAAC;aAC/B;YAED,KAAI,CAAC,QAAQ,CAAC;gBACV,SAAS,EAAE,CAAC,SAAS,IAAI,SAAS,CAAC;aACtC,EAAE;gBACC,IAAI,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE;oBAC1B,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;iBAClD;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAA;;IACL,CAAC;IAzCG,8BAAiB,GAAjB;QACI,IAAI,CAAC,GAAG,GAAG,2BAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAoB,GAApB;QACI,+BAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,mBAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YAC9D,OAAO,KAAK,CAAC;SAChB;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAuBL,SAAC;AAAD,CAhDA,AAgDC,CAhDgB,eAAK,CAAC,SAAS,GAgD/B;AAED,kBAAe,EAAE,CAAC","file":"mq.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { getMatchMedia, releaseMatchMedia } from '../lib/match-media';\nimport { isPointerEventsSupported, isTouchSupported } from './utils';\n\nconst IS_BROWSER = typeof window !== 'undefined';\nconst SUPPORTS_TOUCH = IS_BROWSER && (isPointerEventsSupported() || isTouchSupported());\n\nexport type MqProps = {\n\n    /**\n     * Медиа запрос\n     */\n    query?: string;\n\n    /**\n     * Запрос на поддержку тач-событий\n     */\n    touch?: boolean;\n\n    /**\n     * Дочерние элементы `Mq`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Обработчик изменений в совпадении запросов\n     */\n    onMatchChange?: (isMatched?: boolean) => void;\n};\n\ntype MqState = {\n    isMatched: boolean;\n}\n\n/**\n * Компонент, имплементирующий поддержку медиа запросов в шаблонах.\n * Рендерит внутренние компоненты/разметку исходя из соответствия условиям запроса.\n * Для `query` используется window.matchMedia с полифиллом для IE9.\n * Можно использовать кастомные запросы из `src/mq/mq.json`, например `--small`.\n * Пока браузеры не поддерживают CSS4 Media Queries, поддержка тач-событий определяется через `touch`.\n */\nclass Mq extends React.Component<MqProps, MqState> {\n    state = {\n        isMatched: false,\n    };\n\n    private mql: MediaQueryList | null = null;\n\n    componentDidMount() {\n        this.mql = getMatchMedia(this.props.query);\n        this.mql.addListener(this.handleMatch);\n        this.handleMatch(this.mql);\n    }\n\n    componentWillUnmount() {\n        releaseMatchMedia(this.props.query);\n        this.mql.removeListener(this.handleMatch);\n        this.mql = null;\n    }\n\n    render() {\n        if (!this.props.children || !IS_BROWSER || !this.state.isMatched) {\n            return false;\n        }\n\n        return this.props.children;\n    }\n\n    private handleMatch = (mql: MediaQueryList | MediaQueryListEvent) => {\n        let queryPass = true;\n        let touchPass = true;\n\n        if (this.props.query) {\n            queryPass = mql.matches;\n        }\n        if (this.props.touch) {\n            touchPass = SUPPORTS_TOUCH;\n        } else if (this.props.touch === false) {\n            touchPass = !SUPPORTS_TOUCH;\n        }\n\n        this.setState({\n            isMatched: (queryPass && touchPass),\n        }, () => {\n            if (this.props.onMatchChange) {\n                this.props.onMatchChange(this.state.isMatched);\n            }\n        });\n    }\n}\n\nexport default Mq;\n"]}