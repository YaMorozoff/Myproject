{"version":3,"sources":["amount/amount.tsx"],"names":[],"mappings":";AAAA;;8DAE8D;;;;;;;;;;;;;;;;;;;;;;;;AAE9D,gDAA0B;AAC1B,2DAA+C;AAC/C,4BAAkC;AAClC,+DAAyC;AACzC,yDAAmC;AACnC,+DAAyC;AAEzC,sDAI8B;AAE9B,IAAM,sBAAsB,GAAG,MAAM,CAAC;AAoEtC;;;GAGG;AAEH;IAA4B,0BAA4B;IAAxD;QAAA,qEAwEC;QAvEa,QAAE,GAAG,8BAAQ,CAAC,QAAQ,CAAC,CAAC;;IAuEtC,CAAC;IA9DG,uBAAM,GAAN;QACU,IAAA,eAA6B,EAA3B,kBAAM,EAAE,cAAmB,CAAC;QAC9B,IAAA,yCAA+D,EAA7D,wBAAS,EAAE,wBAAS,EAAE,kCAAuC,CAAC;QAEtE,IAAM,WAAW,GAAG,CAChB,8BAAC,eAAK,CAAC,QAAQ;YACX,wCAAM,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAK,SAAS,CAAS;YACvD,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAC9B,CACpB,CAAC;QAEF,OAAO,CACH,uCACI,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAC9C,EAAE,EAAG,IAAI,CAAC,KAAK,CAAC,EAAE,kBACH,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAEvC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CACrB,8BAAC,iBAAO,IAAC,IAAI,EAAG,IAAI,IAAK,WAAW,CAAY,CACnD,CAAC,CAAC,CAAC,CACA,8BAAC,eAAK,IAAC,IAAI,EAAG,IAAI,IAAK,WAAW,CAAU,CAC/C,CACC,CACT,CAAC;IACN,CAAC;IAEO,4CAA2B,GAAnC,UAAoC,SAAS;QACjC,IAAA,gDAAiB,CAAgB;QAEzC,IAAI,aAAa,GAAG,KAAK,CAAC;QAE1B,IAAI,SAAS,EAAE;YACX,aAAa,GAAG,IAAI,CAAC;YAErB,IAAI,CAAC,iBAAiB,IAAI,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC9D,aAAa,GAAG,KAAK,CAAC;aACzB;SACJ;QAED,IAAI,aAAa,EAAE;YACf,OAAO,CACH,8BAAC,eAAK,CAAC,QAAQ;gBACX,wCAAM,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAChC,kDAAkC,CACjC;gBACP,wCAAM,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAK,SAAS,CAAS,CAC5C,CACpB,CAAC;SACL;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,qCAAoB,GAA5B,UAA6B,cAAc;QACvC,OAAO,CACH,wCAAM,SAAS,EAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC;YAC/B,sBAAM;YACN,cAAc,CACb,CACV,CAAC;IACN,CAAC;IApEM,mBAAY,GAAyB;QACxC,IAAI,EAAE,GAAG;QACT,iBAAiB,EAAE,IAAI;QACvB,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,KAAK;KACnB,CAAC;IARO,MAAM;QADlB,qBAAW,CAAC,IAAI,CAAC;OACL,MAAM,CAwElB;IAAD,aAAC;CAxED,AAwEC,CAxE2B,eAAK,CAAC,SAAS,GAwE1C;AAxEY,wBAAM;AA0EnB,kBAAe,cAAS,CAAsB,MAAM,CAAC,CAAC","file":"amount.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { withTheme } from '../cn';\nimport Heading from '../heading/heading';\nimport Label from '../label/label';\nimport performance from '../performance';\n\nimport {\n    formatAmount,\n    THINSP,\n    AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR,\n} from '../lib/format-amount';\n\nconst ZERO_MINOR_PART_REGEXP = /^0+$/;\n\nexport type AmountProps = {\n    amount: {\n\n        /**\n         * Абсолютное значение суммы\n         */\n        value: number;\n\n        /**\n         * Валюта\n         */\n        currency: {\n\n            /**\n             * Международный код валюты\n             */\n            code: string;\n\n            /**\n             * Количество минорных единиц валюты\n             */\n            minority: number;\n        };\n    };\n\n    /**\n     * Отображение минорной части, если она нулевая\n     */\n    showZeroMinorPart?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Толщина шрифта\n     */\n    bold?: boolean;\n\n    /**\n     * Использовать компонент `Heading` для вывода числа\n     */\n    isHeading?: boolean;\n\n    /**\n     * Тема компонента\n     */\n    theme?: 'alfa-on-color' | 'alfa-on-white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    'data-test-id'?: string;\n};\n\n/**\n * Компонент для отображения суммы, согласно следующему гайдлайну:\n * https://design.alfabank.ru/patterns/amount\n */\n@performance(true)\nexport class Amount extends React.Component<AmountProps> {\n    protected cn = createCn('amount');\n\n    static defaultProps: Partial<AmountProps> = {\n        size: 'm',\n        showZeroMinorPart: true,\n        bold: false,\n        isHeading: false,\n    };\n\n    render() {\n        const { amount, size } = this.props;\n        const { majorPart, minorPart, currencySymbol } = formatAmount(amount);\n\n        const amountInner = (\n            <React.Fragment>\n                <span className={ this.cn('major') }>{ majorPart }</span>\n                { this.renderSeparatorAndMinorPart(minorPart) }\n                { this.renderCurrencySymbol(currencySymbol) }\n            </React.Fragment>\n        );\n\n        return (\n            <div\n                className={ this.cn({ bold: this.props.bold }) }\n                id={ this.props.id }\n                data-test-id={ this.props['data-test-id'] }\n            >\n                { this.props.isHeading ? (\n                    <Heading size={ size }>{ amountInner }</Heading>\n                ) : (\n                    <Label size={ size }>{ amountInner }</Label>\n                ) }\n            </div>\n        );\n    }\n\n    private renderSeparatorAndMinorPart(minorPart) {\n        const { showZeroMinorPart } = this.props;\n\n        let needMinorPart = false;\n\n        if (minorPart) {\n            needMinorPart = true;\n\n            if (!showZeroMinorPart && ZERO_MINOR_PART_REGEXP.test(minorPart)) {\n                needMinorPart = false;\n            }\n        }\n\n        if (needMinorPart) {\n            return (\n                <React.Fragment>\n                    <span className={ this.cn('separator') }>\n                        { AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR }\n                    </span>\n                    <span className={ this.cn('minor') }>{ minorPart }</span>\n                </React.Fragment>\n            );\n        }\n\n        return null;\n    }\n\n    private renderCurrencySymbol(currencySymbol) {\n        return (\n            <span className={ this.cn('currency') }>\n                { THINSP }\n                { currencySymbol }\n            </span>\n        );\n    }\n}\n\nexport default withTheme<AmountProps, Amount>(Amount);\n"]}