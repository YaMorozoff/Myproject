{"version":3,"sources":["lib/window.ts"],"names":[],"mappings":"AAMA;;GAEG;AACH,eAAO,MAAM,mBAAmB,kDAS9B,CAAC;AAEH;;GAEG;AACH,wBAAgB,oBAAoB,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,GAAG,OAAO,CAE7E;AAED;;GAEG;AACH,wBAAgB,0BAA0B,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,GAAG,OAAO,CAKvF","file":"window.d.ts","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport deprecated from 'deprecated-decorator';\n\n/**\n * Check that mouse was outside element.\n */\nexport const isEventOusideBounds = deprecated({\n    name: 'isEventOusideBounds',\n    alternative: 'isEventOutsideClientBounds',\n    version: '12.0.1',\n} as any, (event: MouseEvent, element: Element): boolean => {\n    const rect = element.getBoundingClientRect();\n\n    return ((event.pageX < rect.left || event.pageX > rect.right)\n            || (event.pageY < rect.top || event.pageY > rect.bottom));\n});\n\n/**\n * Check that node is outside given element.\n */\nexport function isNodeOutsideElement(node: Element, element: Element): boolean {\n    return !(element.contains(node) || element === node);\n}\n\n/**\n * Check that mouse was outside element.\n */\nexport function isEventOutsideClientBounds(event: MouseEvent, element: Element): boolean {\n    const rect = element.getBoundingClientRect();\n\n    return event.clientX < rect.left || event.clientX > rect.right\n        || event.clientY < rect.top || event.clientY > rect.bottom;\n}\n"]}