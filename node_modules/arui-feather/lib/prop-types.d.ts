/**
 * Враппер для prop-type валидаторов, позволяющий помечать prop как устаревший, сохраняя проверку типа
 *
 * @param propType оригинальный propType валидатор
 * @param message дополнительное сообщение
 */
export declare function deprecated(propType: Function, message: string): Function;
/**
 * Враппер для prop-type валидатора, позволяющий пометить один из типов как устаревший.
 * В случае, если заданный prop будет соответствовать старому валидатору, но не будет
 * соответствовать новому - пользователь будет об этом предупрежден
 *
 * @param oldType валидатор для старого типа.
 * @param newType валидатор для нового типа.
 * @param message дополнительное сообщение
 */
export declare function deprecatedType(oldType: Function, newType: Function, message: string): Function;
/**
 * Готовый prop-type валидатор для проверки, что значение переданное в проп является HtmlElement
 */
export declare const HtmlElement: Function;
/**
 * Проверяет что значение пропса из заданного множества
 *
 * @param validationMapping множество допустимых значений пропса
 * @param controllingPropName имя контролируемого пропса
 */
export declare function createMappingPropValidator(validationMapping: any, controllingPropName: any): (props: {
    [key: string]: any;
}, propName: string, componentName: string) => Error;
