{"version":3,"sources":["calendar/utils.ts"],"names":[],"mappings":"AAGA;;;;GAIG;AACH,wBAAgB,YAAY,CACxB,IAAI,EAAE,IAAI,GAAG,MAAM,GACpB,OAAO,CAMT;AAED;;;;;GAKG;AACH,wBAAgB,aAAa,CACzB,YAAY,EAAE,IAAI,GAAG,MAAM,EAC3B,UAAU,EAAE,IAAI,GAAG,MAAM,SAW5B","file":"utils.d.ts","sourcesContent":["import startOfToday from 'date-fns/start_of_today';\nimport getTime from 'date-fns/get_time';\n\n/**\n * Возвращает `true`, если переданная дата является текущей датой.\n *\n * @param date Дата для проверки\n */\nexport function isCurrentDay(\n    date: Date | number,\n): boolean {\n    if (date !== null) {\n        return date.valueOf() === getTime(startOfToday());\n    }\n\n    return false;\n}\n\n/**\n * Возвращает массив - перечень лет, попадающих в переданный диапазон дат.\n * @param earlierLimit Начало диапазона дат\n * @param laterLimit Окончание диапазона дат\n * @returns Диапазон лет\n */\nexport function getYearsRange(\n    earlierLimit: Date | number,\n    laterLimit: Date | number,\n) {\n    const years = [];\n    const startYear = new Date(earlierLimit).getFullYear();\n    const endYear = new Date(laterLimit).getFullYear();\n\n    for (let currentYear = startYear; currentYear <= endYear; currentYear += 1) {\n        years.push(currentYear);\n    }\n\n    return years.reverse();\n}\n"]}